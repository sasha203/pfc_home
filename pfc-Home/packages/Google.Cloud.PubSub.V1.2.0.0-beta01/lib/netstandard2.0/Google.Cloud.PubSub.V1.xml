<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Cloud.PubSub.V1</name>
    </assembly>
    <members>
        <member name="T:Google.Cloud.PubSub.V1.OrderingKeyInErrorStateException">
            <summary>
            Exception thrown when publishing a message with an ordering key that is in an error state. 
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.OrderingKeyInErrorStateException.#ctor(System.String)">
            <summary>
            Construct an <see cref="T:Google.Cloud.PubSub.V1.OrderingKeyInErrorStateException"/> instance.
            </summary>
            <param name="orderingKey">The ordering key that is in an error state.</param>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClient">
            <summary>
            A PubSub publisher that is associated with a specific <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClient.Settings">
            <summary>
            Settings for the <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Settings.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.Settings.BatchingSettings">
            <summary>
            <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.Settings.BatchingSettings"/> that control how messages are batched when sending.
            If <c>null</c>, defaults to <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.DefaultBatchingSettings"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.Settings.Scheduler">
            <summary>
            The <see cref="T:Google.Api.Gax.IScheduler"/> to use.
            If <c>null</c>, defaults to <see cref="T:Google.Api.Gax.SystemScheduler"/>. Usually only useful for testing.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.Settings.EnableMessageOrdering">
            <summary>
            Enable message ordering. It is invalid to set <see cref="P:Google.Cloud.PubSub.V1.PubsubMessage.OrderingKey"/> in a message
            if this has not been set to <c>true</c>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Settings.Clone">
            <summary>
            Create a clone of this object.
            </summary>
            <returns>A clone of this object.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings">
            <summary>
            Settings for creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>s.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings.#ctor(System.Nullable{System.Int32},Google.Cloud.PubSub.V1.PublisherServiceApiSettings,Grpc.Core.ChannelCredentials,System.String)">
            <summary>
            Instantiate with the specified settings.
            </summary>
            <param name="clientCount">Optional.
            The number of <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>s to create and use within a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> instance.</param>
            <param name="publisherServiceApiSettings">Optional. The settings to use when creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.</param>
            <param name="credentials">Optional. Credentials to use when creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.</param>
            <param name="serviceEndpoint">Optional.
            The endpoint to use when creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings.ClientCount">
            <summary>
            The number of <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>s to create and use within a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> instance.
            If <c>null</c>, defaults to the CPU count on the machine this is being executed on.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings.PublisherServiceApiSettings">
            <summary>
            The settings to use when creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.
            If <c>null</c>, defaults to <see cref="M:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.GetDefault"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings.Credentials">
            <summary>
            Credentials to use when creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.
            If <c>null</c>, defaults to using the default credentials.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings.ServiceEndpoint">
            <summary>
            The endpoint to use when creating <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.
            If <c>null</c>, defaults to <see cref="P:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DefaultEndpoint"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.DefaultBatchingSettings">
            <summary>
            Default <see cref="T:Google.Api.Gax.BatchingSettings"/> for <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.
            Default values are:
            <see cref="P:Google.Api.Gax.BatchingSettings.ElementCountThreshold"/> = 100;
            <see cref="P:Google.Api.Gax.BatchingSettings.ByteCountThreshold"/> = 1,000,000;
            <see cref="P:Google.Api.Gax.BatchingSettings.DelayThreshold"/> = 10 milliseconds;
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.ApiMaxBatchingSettings">
            <summary>
            The absolute maximum <see cref="T:Google.Api.Gax.BatchingSettings"/> supported by the service.
            Maximum values are:
            <see cref="P:Google.Api.Gax.BatchingSettings.ElementCountThreshold"/> = 1,000;
            <see cref="P:Google.Api.Gax.BatchingSettings.ByteCountThreshold"/> = 10,000,000;
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.CreateAsync(Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings,Google.Cloud.PubSub.V1.PublisherClient.Settings)">
            <summary>
            Create a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            The default <paramref name="settings"/> and <paramref name="clientCreationSettings"/> are suitable for machines with
            high network bandwidth (e.g. Google Compute Engine instances). If running with more limited network bandwidth, some
            settings may need changing; especially
            <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings.PublisherServiceApiSettings"/>.<see cref="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.PublishSettings"/>.<see cref="P:Google.Api.Gax.Grpc.CallSettings.Retry"/>.
            </summary>
            <param name="topicName">The <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/> to publish messages to.</param>
            <param name="clientCreationSettings">Optional. <see cref="T:Google.Cloud.PubSub.V1.PublisherClient.ClientCreationSettings"/> specifying how to create
            <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>s.</param>
            <param name="settings">Optional. <see cref="T:Google.Cloud.PubSub.V1.PublisherClient.Settings"/> for creating a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.</param>
            <returns>A <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.Create(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PublisherServiceApiClient},Google.Cloud.PubSub.V1.PublisherClient.Settings)">
            <summary>
            Create a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            The gRPC <see cref="T:Grpc.Core.Channel"/>s underlying the provided <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>s must have their
            maximum send and maximum receive sizes set to unlimited, otherwise performance will be severly affected,
            possibly causing a deadlock.
            The default <paramref name="settings"/> are suitable for machines with high network bandwidth
            (e.g. Google Compute Engine instances). If running with more limited network bandwidth, some
            settings may need changing.
            </summary>
            <param name="topicName">The <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/> to publish messages to.</param>
            <param name="clients">The <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>s to use in a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.
            For high performance, these should all use distinct <see cref="T:Grpc.Core.Channel"/>s.</param>
            <param name="settings">Optional. <see cref="T:Google.Cloud.PubSub.V1.PublisherClient.Settings"/> for creating a <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>.</param>
            <returns>A <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName">
            <summary>
            The associated <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>. 
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.PubsubMessage)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="message">The <see cref="T:Google.Cloud.PubSub.V1.PubsubMessage"/> to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(System.String,System.String,System.Text.Encoding)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="orderingKey">The ordering key to use for this message.</param>
            <param name="message">The string to publish.</param>
            <param name="encoding">The encoding for string to byte conversion.
            If <c>null</c>, defaults to <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(System.String,System.Text.Encoding)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="message">The string to publish.</param>
            <param name="encoding">The encoding for string to byte conversion.
            If <c>null</c>, defaults to <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(System.String,Google.Protobuf.IMessage)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="orderingKey">The ordering key to use for this message.</param>
            <param name="message">The message to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(Google.Protobuf.IMessage)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="message">The message to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(System.String,Google.Protobuf.ByteString)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="orderingKey">The ordering key to use for this message.</param>
            <param name="message">The <see cref="T:Google.Protobuf.ByteString"/> to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(Google.Protobuf.ByteString)">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="message">The <see cref="T:Google.Protobuf.ByteString"/> to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(System.String,System.Byte[])">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="orderingKey">The ordering key to use for this message.</param>
            <param name="message">The message to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.PublishAsync(System.Byte[])">
            <summary>
            Publish a message to the topic specified in <see cref="P:Google.Cloud.PubSub.V1.PublisherClient.TopicName"/>.
            </summary>
            <param name="message">The message to publish.</param>
            <returns>A task which completes once the message has been published.
            The task <see cref="P:System.Threading.Tasks.Task`1.Result"/> contains the message ID.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ResumePublish(System.String)">
            <summary>
            Re-enable publishing the the given ordering key, after an error has caused the ordering key to be disabled.
            </summary>
            <param name="orderingKey">The ordering key to re-enable.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ShutdownAsync(System.Threading.CancellationToken)">
            <summary>
            Shutdown this <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>. Cancelling <paramref name="hardStopToken"/> aborts the
            clean shutdown process, and may leave some locally queued messages unsent.
            The returned <see cref="T:System.Threading.Tasks.Task"/> completes when all queued messages have been published.
            The returned <see cref="T:System.Threading.Tasks.Task"/> cancels if <paramref name="hardStopToken"/> is cancelled.
            </summary>
            <param name="hardStopToken">Cancel this <see cref="T:System.Threading.CancellationToken"/> to abort publishing queued messages.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when all queued messages have been published; or cancels if
            <paramref name="hardStopToken"/> is cancelled.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClient.ShutdownAsync(System.TimeSpan)">
            <summary>
            Shutdown this <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>. If <paramref name="timeout"/> expires, the clean shutdown process will
            abort; leaving some locally queued messages unsent.
            The returned <see cref="T:System.Threading.Tasks.Task"/> completes when all queued messages have been published.
            The returned <see cref="T:System.Threading.Tasks.Task"/> cancels if the <paramref name="timeout"/> expires before all messages are published.
            </summary>
            <param name="timeout">After this period, abort publishing queued messages.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when all queued messages have been published; or cancels if
            <paramref name="timeout"/> expires.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClientImpl">
            <summary>
            Implementation of PubSub publisher that is associated with a specific <see cref="P:Google.Cloud.PubSub.V1.PublisherClientImpl.TopicName"/>.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherClientImpl.Batch">
            <summary>
            A batch of messages that all have the same ordering-key (or no ordering-key), and will be
            sent to the server in a single network call.
            A batch has been "processed" when it can no longer be changed. This will mean it has either been inserted into
            the queue for sending to the server, or has an ordering-key and is queued behind another batch with the same ordering-key.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublisherClientImpl.OrderingKeyState.Normal">
            <summary>
            No batches in-flight for this key, and key is not in an error state.
            The empty ordering-key (meaning no ordering) is always in this state.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublisherClientImpl.OrderingKeyState.InFlight">
            <summary>
            This key has a batch in the "batches-ready" queue, or actually in-flight to/from server.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublisherClientImpl.OrderingKeyState.Error">
            <summary>
            This ordering-key is in an error state, so reject all messages.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.#ctor(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PublisherServiceApiClient},Google.Cloud.PubSub.V1.PublisherClient.Settings,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Instantiate a <see cref="T:Google.Cloud.PubSub.V1.PublisherClientImpl"/> associated with the specified <see cref="P:Google.Cloud.PubSub.V1.PublisherClientImpl.TopicName"/>.
            </summary>
            <param name="topicName">The <see cref="P:Google.Cloud.PubSub.V1.PublisherClientImpl.TopicName"/> to publish messages to.</param>
            <param name="clients">The <see cref="T:Google.Cloud.PubSub.V1.PublisherClient"/>s to use.</param>
            <param name="settings"><see cref="T:Google.Cloud.PubSub.V1.PublisherClient.Settings"/> to use in this <see cref="T:Google.Cloud.PubSub.V1.PublisherClientImpl"/>.</param>
            <param name="shutdown">Function to call on this <see cref="T:Google.Cloud.PubSub.V1.PublisherClientImpl"/> shutdown.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherClientImpl.TopicName">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.PublishAsync(Google.Cloud.PubSub.V1.PubsubMessage)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.ResumePublish(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherClientImpl.ShutdownAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Publisher">
            <summary>
            The service that an application uses to manipulate topics, and to send
            messages to a topic.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Publisher.PublisherClient">
            <summary>Client for Publisher</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for Publisher</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Publisher that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopic(Google.Cloud.PubSub.V1.Topic,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name. See the
            &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
            resource name rules&lt;/a>.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopic(Google.Cloud.PubSub.V1.Topic,Grpc.Core.CallOptions)">
            <summary>
            Creates the given topic with the given name. See the
            &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
            resource name rules&lt;/a>.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name. See the
            &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
            resource name rules&lt;/a>.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Grpc.Core.CallOptions)">
            <summary>
            Creates the given topic with the given name. See the
            &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
            resource name rules&lt;/a>.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.UpdateTopic(Google.Cloud.PubSub.V1.UpdateTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.UpdateTopic(Google.Cloud.PubSub.V1.UpdateTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.UpdateTopicAsync(Google.Cloud.PubSub.V1.UpdateTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.UpdateTopicAsync(Google.Cloud.PubSub.V1.UpdateTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.Publish(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.Publish(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.CallOptions)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.CallOptions)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSnapshots(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSnapshots(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSnapshotsAsync(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.ListTopicSnapshotsAsync(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Publisher.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Publisher.PublisherBase">
            <summary>Base class for server-side implementations of Publisher</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.CreateTopic(Google.Cloud.PubSub.V1.Topic,Grpc.Core.ServerCallContext)">
            <summary>
            Creates the given topic with the given name. See the
            &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
            resource name rules&lt;/a>.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.UpdateTopic(Google.Cloud.PubSub.V1.UpdateTopicRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.Publish(Google.Cloud.PubSub.V1.PublishRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.ListTopicSnapshots(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.PublisherBase.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.BindService(Google.Cloud.PubSub.V1.Publisher.PublisherBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Publisher.BindService(Grpc.Core.ServiceBinderBase,Google.Cloud.PubSub.V1.Publisher.PublisherBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings">
            <summary>Settings for <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> instances.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.SetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceClient.SetIamPolicy</c> and <c>PublisherServiceClient.SetIamPolicyAsync</c>.
            </summary>
            <remarks>By default, retry will not be attempted.</remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.GetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceClient.GetIamPolicy</c> and <c>PublisherServiceClient.GetIamPolicyAsync</c>.
            </summary>
            <remarks>By default, retry will not be attempted.</remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.TestIamPermissionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceClient.TestIamPermissions</c> and <c>PublisherServiceClient.TestIamPermissionsAsync</c>.
            </summary>
            <remarks>By default, retry will not be attempted.</remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.GetDefault">
            <summary>Get a new instance of the default <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings"/>.</summary>
            <returns>A new instance of the default <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.#ctor">
            <summary>Constructs a new <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings"/> object with default settings.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.CreateTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.CreateTopic</c> and <c>PublisherServiceApiClient.CreateTopicAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.UpdateTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.UpdateTopic</c> and <c>PublisherServiceApiClient.UpdateTopicAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.PublishSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.Publish</c> and <c>PublisherServiceApiClient.PublishAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.GetTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.GetTopic</c> and <c>PublisherServiceApiClient.GetTopicAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.ListTopicsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.ListTopics</c> and <c>PublisherServiceApiClient.ListTopicsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.ListTopicSubscriptionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.ListTopicSubscriptions</c> and
            <c>PublisherServiceApiClient.ListTopicSubscriptionsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.ListTopicSnapshotsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.ListTopicSnapshots</c> and <c>PublisherServiceApiClient.ListTopicSnapshotsAsync</c>
            .
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.DeleteTopicSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>PublisherServiceApiClient.DeleteTopic</c> and <c>PublisherServiceApiClient.DeleteTopicAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiSettings.Clone">
            <summary>Creates a deep clone of this object, with all the same property values.</summary>
            <returns>A deep clone of this <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings"/> object.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient">
            <summary>PublisherServiceApi client wrapper, for convenient use.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicyAsync(Google.Api.Gax.IResourceName,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicyAsync(Google.Api.Gax.IResourceName,Google.Cloud.Iam.V1.Policy,System.Threading.CancellationToken)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicy(Google.Api.Gax.IResourceName,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,System.Threading.CancellationToken)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicy(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,System.Threading.CancellationToken)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicyAsync(Google.Api.Gax.IResourceName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicyAsync(Google.Api.Gax.IResourceName,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicy(Google.Api.Gax.IResourceName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicyAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicy(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissionsAsync(Google.Api.Gax.IResourceName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissionsAsync(Google.Api.Gax.IResourceName,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissions(Google.Api.Gax.IResourceName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissions(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,System.Threading.CancellationToken)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DefaultEndpoint">
            <summary>
            The default endpoint for the PublisherServiceApi service, which is a host of "pubsub.googleapis.com" and a
            port of 443.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DefaultScopes">
            <summary>The default PublisherServiceApi scopes.</summary>
            <remarks>
            The default PublisherServiceApi scopes are:
            <list type="bullet">
            <item><description>https://www.googleapis.com/auth/cloud-platform</description></item>
            <item><description>https://www.googleapis.com/auth/pubsub</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> using the default credentials, endpoint and
            settings. To specify custom credentials or other settings, use
            <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder"/>.
            </summary>
            <param name="cancellationToken">
            The <see cref="T:System.Threading.CancellationToken"/> to use while creating the client.
            </param>
            <returns>The task representing the created <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Create">
            <summary>
            Synchronously creates a <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> using the default credentials, endpoint and
            settings. To specify custom credentials or other settings, use
            <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Create(Grpc.Core.CallInvoker,Google.Cloud.PubSub.V1.PublisherServiceApiSettings)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> which uses the specified call invoker for remote
            operations.
            </summary>
            <param name="callInvoker">
            The <see cref="T:Grpc.Core.CallInvoker"/> for remote operations. Must not be null.
            </param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Create"/> and
            <see cref="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateAsync(System.Threading.CancellationToken)"/>. Channels which weren't automatically created are not
            affected.
            </summary>
            <remarks>
            After calling this method, further calls to <see cref="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Create"/> and
            <see cref="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateAsync(System.Threading.CancellationToken)"/> will create new channels, which could in turn be shut down
            by another call to this method.
            </remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GrpcClient">
            <summary>The underlying gRPC PublisherServiceApi client</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopic(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopic(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="name">
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopicAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="name">
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="name">
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopic(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="name">
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopicAsync(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="name">
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.CreateTopicAsync(Google.Cloud.PubSub.V1.TopicName,System.Threading.CancellationToken)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="name">
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.UpdateTopic(Google.Cloud.PubSub.V1.UpdateTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.UpdateTopicAsync(Google.Cloud.PubSub.V1.UpdateTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.UpdateTopicAsync(Google.Cloud.PubSub.V1.UpdateTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Publish(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Publish(System.String,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="topic">
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            Required. The messages to publish.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.PublishAsync(System.String,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="topic">
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            Required. The messages to publish.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.PublishAsync(System.String,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="topic">
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            Required. The messages to publish.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.Publish(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="topic">
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            Required. The messages to publish.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.PublishAsync(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="topic">
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            Required. The messages to publish.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.PublishAsync(Google.Cloud.PubSub.V1.TopicName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.PubsubMessage},System.Threading.CancellationToken)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="topic">
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="messages">
            Required. The messages to publish.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopic(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopicAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopic(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopicAsync(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.GetTopicAsync(Google.Cloud.PubSub.V1.TopicName,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="topic">
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopics(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="project">
            Required. The name of the project in which to list topics.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicsAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="project">
            Required. The name of the project in which to list topics.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopics(Google.Api.Gax.ResourceNames.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="project">
            Required. The name of the project in which to list topics.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicsAsync(Google.Api.Gax.ResourceNames.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="project">
            Required. The name of the project in which to list topics.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSubscriptions(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="topic">
            Required. The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSubscriptionsAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="topic">
            Required. The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSubscriptions(Google.Cloud.PubSub.V1.TopicName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="topic">
            Required. The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.TopicName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="topic">
            Required. The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSnapshots(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.ListTopicSnapshotsAsync(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopic(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopicAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopic(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.TopicName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClient.DeleteTopicAsync(Google.Cloud.PubSub.V1.TopicName,System.Threading.CancellationToken)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="topic">
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl">
            <summary>PublisherServiceApi client wrapper implementation, for convenient use.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.#ctor(Google.Cloud.PubSub.V1.Publisher.PublisherClient,Google.Cloud.PubSub.V1.PublisherServiceApiSettings)">
            <summary>
            Constructs a client wrapper for the PublisherServiceApi service, with the specified gRPC client and
            settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiSettings"/> used within this client.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.GrpcClient">
            <summary>The underlying gRPC PublisherServiceApi client</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.CreateTopic(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.CreateTopicAsync(Google.Cloud.PubSub.V1.Topic,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates the given topic with the given name. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.UpdateTopic(Google.Cloud.PubSub.V1.UpdateTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.UpdateTopicAsync(Google.Cloud.PubSub.V1.UpdateTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing topic. Note that certain properties of a
            topic are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.Publish(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.PublishAsync(Google.Cloud.PubSub.V1.PublishRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
            does not exist.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.GetTopic(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.GetTopicAsync(Google.Cloud.PubSub.V1.GetTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration of a topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.ListTopics(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.ListTopicsAsync(Google.Cloud.PubSub.V1.ListTopicsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching topics.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Topic"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.ListTopicSubscriptions(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.ListTopicSubscriptionsAsync(Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the subscriptions on this topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.ListTopicSnapshots(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.ListTopicSnapshotsAsync(Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the names of the snapshots on this topic. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.DeleteTopic(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientImpl.DeleteTopicAsync(Google.Cloud.PubSub.V1.DeleteTopicRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
            does not exist. After a topic is deleted, a new topic may be created with
            the same name; this is an entirely new topic with none of the old
            configuration or subscriptions. Existing subscriptions to this topic are
            not deleted, but their `topic` field is set to `_deleted-topic_`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder">
            <summary>
            Builder class for <see cref="T:Google.Cloud.PubSub.V1.PublisherServiceApiClient"/> to provide simple configuration of credentials,
            endpoint etc.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.Settings">
            <summary>The settings to use for RPCs, or <c>null</c> for the default settings.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.BuildAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.GetDefaultEndpoint">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.GetDefaultScopes">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.GetChannelPool">
            <inheritdoc/>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublisherServiceApiClientBuilder.DefaultGrpcAdapter">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicsRequest">
            <summary>
            Request for the `ListTopics` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.Project">
            <summary>
            Required. The name of the project in which to list topics.
            Format is `projects/{project-id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.PageSize">
            <summary>
            Maximum number of topics to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.PageToken">
            <summary>
            The value returned by the last `ListTopicsResponse`; indicates that this is
            a continuation of a prior `ListTopics` call, and that the system should
            return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsRequest.ProjectAsProjectName">
            <summary>
            <see cref="T:Google.Api.Gax.ResourceNames.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListTopicsRequest.Project"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest">
            <summary>
            Request for the `ListTopicSubscriptions` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.Topic">
            <summary>
            Required. The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageSize">
            <summary>
            Maximum number of subscription names to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.PageToken">
            <summary>
            The value returned by the last `ListTopicSubscriptionsResponse`; indicates
            that this is a continuation of a prior `ListTopicSubscriptions` call, and
            that the system should return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.TopicAsTopicName">
            <summary><see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsRequest.Topic"/> resource name property.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest">
            <summary>
            Request for the `ListTopicSnapshots` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest.Topic">
            <summary>
            The name of the topic that snapshots are attached to.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest.PageSize">
            <summary>
            Maximum number of snapshot names to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSnapshotsRequest.PageToken">
            <summary>
            The value returned by the last `ListTopicSnapshotsResponse`; indicates
            that this is a continuation of a prior `ListTopicSnapshots` call, and
            that the system should return the next page of data.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicsResponse">
            <summary>
            Response for the `ListTopics` method.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsResponse.TopicsFieldNumber">
            <summary>Field number for the "topics" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsResponse.Topics">
            <summary>
            The resulting topics.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more topics that match the
            request; this value should be passed in a new `ListTopicsRequest`.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse">
            <summary>
            Response for the `ListTopicSubscriptions` method.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.SubscriptionsFieldNumber">
            <summary>Field number for the "subscriptions" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.Subscriptions">
            <summary>
            The names of the subscriptions that match the request.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more subscriptions that match
            the request; this value should be passed in a new
            `ListTopicSubscriptionsRequest` to get more subscriptions.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.SubscriptionsAsSubscriptionNames">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListTopicSubscriptionsResponse.Subscriptions"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListTopicSnapshotsResponse">
            <summary>
            Response for the `ListTopicSnapshots` method.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListTopicSnapshotsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSnapshotsResponse.SnapshotsFieldNumber">
            <summary>Field number for the "snapshots" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSnapshotsResponse.Snapshots">
            <summary>
            The names of the snapshots that match the request.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListTopicSnapshotsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListTopicSnapshotsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more snapshots that match
            the request; this value should be passed in a new
            `ListTopicSnapshotsRequest` to get more snapshots.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PubsubReflection">
            <summary>Holder for reflection information generated from google/pubsub/v1/pubsub.proto</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubReflection.Descriptor">
            <summary>File descriptor for google/pubsub/v1/pubsub.proto</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.MessageStoragePolicy.AllowedPersistenceRegionsFieldNumber">
            <summary>Field number for the "allowed_persistence_regions" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.MessageStoragePolicy.AllowedPersistenceRegions">
            <summary>
            A list of IDs of GCP regions where messages that are published to the topic
            may be persisted in storage. Messages published by publishers running in
            non-allowed GCP regions (or running outside of GCP altogether) will be
            routed for storage in one of the allowed regions. An empty list means that
            no regions are allowed, and is not a valid configuration.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Topic">
            <summary>
            A topic resource.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Topic.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.Name">
            <summary>
            Required. The name of the topic. It must have the format
            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
            signs (`%`). It must be between 3 and 255 characters in length, and it
            must not start with `"goog"`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Topic.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.Labels">
            <summary>
            See &lt;a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
            managing labels&lt;/a>.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Topic.MessageStoragePolicyFieldNumber">
            <summary>Field number for the "message_storage_policy" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.MessageStoragePolicy">
            <summary>
            Policy constraining the set of Google Cloud Platform regions where messages
            published to the topic may be stored. If not present, then no constraints
            are in effect.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Topic.KmsKeyNameFieldNumber">
            <summary>Field number for the "kms_key_name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.KmsKeyName">
             <summary>
             The resource name of the Cloud KMS CryptoKey to be used to protect access
             to messages published on this topic.
            
             The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
             </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Topic.TopicName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Topic.Name"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PubsubMessage">
            <summary>
            A message that is published by publishers and consumed by subscribers. The
            message must contain either a non-empty data field or at least one attribute.
            Note that client libraries represent this object differently
            depending on the language. See the corresponding
            &lt;a href="https://cloud.google.com/pubsub/docs/reference/libraries">client
            library documentation&lt;/a> for more information. See
            &lt;a href="https://cloud.google.com/pubsub/quotas">Quotas and limits&lt;/a>
            for more information about message limits.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.Data">
            <summary>
            The message data field. If this field is empty, the message must contain
            at least one attribute.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.Attributes">
            <summary>
            Attributes for this message. If this field is empty, the message must
            contain non-empty data.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.MessageIdFieldNumber">
            <summary>Field number for the "message_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.MessageId">
            <summary>
            ID of this message, assigned by the server when the message is published.
            Guaranteed to be unique within the topic. This value may be read by a
            subscriber that receives a `PubsubMessage` via a `Pull` call or a push
            delivery. It must not be populated by the publisher in a `Publish` call.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.PublishTimeFieldNumber">
            <summary>Field number for the "publish_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.PublishTime">
            <summary>
            The time at which the message was published, populated by the server when
            it receives the `Publish` call. It must not be populated by the
            publisher in a `Publish` call.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PubsubMessage.OrderingKeyFieldNumber">
            <summary>Field number for the "ordering_key" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PubsubMessage.OrderingKey">
            <summary>
            If non-empty, identifies related messages for which publish order should be
            respected. If a `Subscription` has `enable_message_ordering` set to `true`,
            messages published with the same non-empty `ordering_key` value will be
            delivered to subscribers in the order in which they are received by the
            Pub/Sub system. All `PubsubMessage`s published in a given `PublishRequest`
            must specify the same `ordering_key` value.
            &lt;b>EXPERIMENTAL:&lt;/b> This feature is part of a closed alpha release. This
            API might be changed in backward-incompatible ways and is not recommended
            for production use. It is not subject to any SLA or deprecation policy.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.GetTopicRequest">
            <summary>
            Request for the GetTopic method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.GetTopicRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetTopicRequest.Topic">
            <summary>
            Required. The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetTopicRequest.TopicAsTopicName">
            <summary><see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.GetTopicRequest.Topic"/> resource name property.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.UpdateTopicRequest">
            <summary>
            Request for the UpdateTopic method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateTopicRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateTopicRequest.Topic">
            <summary>
            Required. The updated topic object.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateTopicRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateTopicRequest.UpdateMask">
            <summary>
            Required. Indicates which fields in the provided topic to update. Must be specified
            and non-empty. Note that if `update_mask` contains
            "message_storage_policy" then the new value will be determined based on the
            policy configured at the project or organization level. The
            `message_storage_policy` must not be set in the `topic` provided above.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublishRequest">
            <summary>
            Request for the Publish method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublishRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishRequest.Topic">
            <summary>
            Required. The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublishRequest.MessagesFieldNumber">
            <summary>Field number for the "messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishRequest.Messages">
            <summary>
            Required. The messages to publish.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishRequest.TopicAsTopicName">
            <summary><see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.PublishRequest.Topic"/> resource name property.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PublishResponse">
            <summary>
            Response for the `Publish` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PublishResponse.MessageIdsFieldNumber">
            <summary>Field number for the "message_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PublishResponse.MessageIds">
            <summary>
            The server-assigned ID of each published message, in the same order as
            the messages in the request. IDs are guaranteed to be unique within
            the topic.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeleteTopicRequest">
            <summary>
            Request for the `DeleteTopic` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeleteTopicRequest.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteTopicRequest.Topic">
            <summary>
            Required. Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteTopicRequest.TopicAsTopicName">
            <summary><see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.DeleteTopicRequest.Topic"/> resource name property.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscription">
            <summary>
            A subscription resource.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.Name">
            <summary>
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.Topic">
            <summary>
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.PushConfigFieldNumber">
            <summary>Field number for the "push_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.PushConfig">
            <summary>
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.AckDeadlineSecondsFieldNumber">
            <summary>Field number for the "ack_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.AckDeadlineSeconds">
             <summary>
             The approximate amount of time (on a best-effort basis) Pub/Sub waits for
             the subscriber to acknowledge receipt before resending the message. In the
             interval after the message is delivered and before it is acknowledged, it
             is considered to be &lt;i>outstanding&lt;/i>. During that time period, the
             message will not be redelivered (on a best-effort basis).
            
             For pull subscriptions, this value is used as the initial value for the ack
             deadline. To override this value for a given message, call
             `ModifyAckDeadline` with the corresponding `ack_id` if using
             non-streaming pull or send the `ack_id` in a
             `StreamingModifyAckDeadlineRequest` if using streaming pull.
             The minimum custom deadline you can specify is 10 seconds.
             The maximum custom deadline you can specify is 600 seconds (10 minutes).
             If this parameter is 0, a default value of 10 seconds is used.
            
             For push delivery, this value is also used to set the request timeout for
             the call to the push endpoint.
            
             If the subscriber never acknowledges the message, the Pub/Sub
             system will eventually redeliver the message.
             </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.RetainAckedMessagesFieldNumber">
            <summary>Field number for the "retain_acked_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.RetainAckedMessages">
            <summary>
            Indicates whether to retain acknowledged messages. If true, then
            messages are not expunged from the subscription's backlog, even if they are
            acknowledged, until they fall out of the `message_retention_duration`
            window. This must be true if you would like to
            &lt;a
            href="https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time">
            Seek to a timestamp&lt;/a>.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.MessageRetentionDurationFieldNumber">
            <summary>Field number for the "message_retention_duration" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.MessageRetentionDuration">
            <summary>
            How long to retain unacknowledged messages in the subscription's backlog,
            from the moment a message is published.
            If `retain_acked_messages` is true, then this also configures the retention
            of acknowledged messages, and thus configures how far back in time a `Seek`
            can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10
            minutes.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.Labels">
            <summary>
            See &lt;a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
            managing labels&lt;/a>.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.EnableMessageOrderingFieldNumber">
            <summary>Field number for the "enable_message_ordering" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.EnableMessageOrdering">
            <summary>
            If true, messages published with the same `ordering_key` in `PubsubMessage`
            will be delivered to the subscribers in the order in which they
            are received by the Pub/Sub system. Otherwise, they may be delivered in
            any order.
            &lt;b>EXPERIMENTAL:&lt;/b> This feature is part of a closed alpha release. This
            API might be changed in backward-incompatible ways and is not recommended
            for production use. It is not subject to any SLA or deprecation policy.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.ExpirationPolicyFieldNumber">
            <summary>Field number for the "expiration_policy" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.ExpirationPolicy">
            <summary>
            A policy that specifies the conditions for this subscription's expiration.
            A subscription is considered active as long as any connected subscriber is
            successfully consuming messages from the subscription or is issuing
            operations on the subscription. If `expiration_policy` is not set, a
            *default policy* with `ttl` of 31 days will be used. The minimum allowed
            value for `expiration_policy.ttl` is 1 day.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Subscription.DeadLetterPolicyFieldNumber">
            <summary>Field number for the "dead_letter_policy" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.DeadLetterPolicy">
             <summary>
             A policy that specifies the conditions for dead lettering messages in
             this subscription. If dead_letter_policy is not set, dead lettering
             is disabled.
            
             The Cloud Pub/Sub service account associated with this subscriptions's
             parent project (i.e.,
             service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
             permission to Acknowledge() messages on this subscription.
             &lt;b>EXPERIMENTAL:&lt;/b> This feature is part of a closed alpha release. This
             API might be changed in backward-incompatible ways and is not recommended
             for production use. It is not subject to any SLA or deprecation policy.
             </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.SubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Subscription.Name"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscription.TopicAsTopicName">
            <summary><see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Subscription.Topic"/> resource name property.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeadLetterPolicy">
             <summary>
             Dead lettering is done on a best effort basis. The same message might be
             dead lettered multiple times.
            
             If validation on any of the fields fails at subscription creation/updation,
             the create/update subscription request will fail.
             </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeadLetterPolicy.DeadLetterTopicFieldNumber">
            <summary>Field number for the "dead_letter_topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeadLetterPolicy.DeadLetterTopic">
             <summary>
             The name of the topic to which dead letter messages should be published.
             Format is `projects/{project}/topics/{topic}`.The Cloud Pub/Sub service
             account associated with the enclosing subscription's parent project (i.e.,
             service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have
             permission to Publish() to this topic.
            
             The operation will fail if the topic does not exist.
             Users should ensure that there is a subscription attached to this topic
             since messages published to a topic with no subscriptions are lost.
             </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeadLetterPolicy.MaxDeliveryAttemptsFieldNumber">
            <summary>Field number for the "max_delivery_attempts" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeadLetterPolicy.MaxDeliveryAttempts">
             <summary>
             The maximum number of delivery attempts for any message. The value must be
             between 5 and 100.
            
             The number of delivery attempts is defined as 1 + (the sum of number of
             NACKs and number of times the acknowledgement deadline has been exceeded
             for the message).
            
             A NACK is any call to ModifyAckDeadline with a 0 deadline. Note that
             client libraries may automatically extend ack_deadlines.
            
             This field will be honored on a best effort basis.
            
             If this parameter is 0, a default value of 5 is used.
             </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ExpirationPolicy">
            <summary>
            A policy that specifies the conditions for resource expiration (i.e.,
            automatic resource deletion).
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ExpirationPolicy.TtlFieldNumber">
            <summary>Field number for the "ttl" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ExpirationPolicy.Ttl">
            <summary>
            Specifies the "time-to-live" duration for an associated resource. The
            resource expires if it is not active for a period of `ttl`. The definition
            of "activity" depends on the type of the associated resource. The minimum
            and maximum allowed values for `ttl` depend on the type of the associated
            resource, as well. If `ttl` is not set, the associated resource never
            expires.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PushConfig">
            <summary>
            Configuration for a push delivery endpoint.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.PushEndpointFieldNumber">
            <summary>Field number for the "push_endpoint" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.PushEndpoint">
            <summary>
            A URL locating the endpoint to which messages should be pushed.
            For example, a Webhook endpoint might use "https://example.com/push".
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.Attributes">
             <summary>
             Endpoint configuration attributes that can be used to control different
             aspects of the message delivery.
            
             The only currently supported attribute is `x-goog-version`, which you can
             use to change the format of the pushed message. This attribute
             indicates the version of the data expected by the endpoint. This
             controls the shape of the pushed message (i.e., its fields and metadata).
            
             If not present during the `CreateSubscription` call, it will default to
             the version of the Pub/Sub API used to make such call. If not present in a
             `ModifyPushConfig` call, its value will not be changed. `GetSubscription`
             calls will always return a valid version, even if the subscription was
             created without this attribute.
            
             The only supported values for the `x-goog-version` attribute are:
            
             * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
             * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.
            
             For example:
             &lt;pre>&lt;code>attributes { "x-goog-version": "v1" } &lt;/code>&lt;/pre>
             </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.OidcTokenFieldNumber">
            <summary>Field number for the "oidc_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.OidcToken">
            <summary>
            If specified, Pub/Sub will generate and attach an OIDC JWT token as an
            `Authorization` header in the HTTP request for every pushed message.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PushConfig.AuthenticationMethodOneofCase">
            <summary>Enum of possible cases for the "authentication_method" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PushConfig.Types">
            <summary>Container for nested types declared in the PushConfig message type.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PushConfig.Types.OidcToken">
            <summary>
            Contains information needed for generating an
            [OpenID Connect
            token](https://developers.google.com/identity/protocols/OpenIDConnect).
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.Types.OidcToken.ServiceAccountEmailFieldNumber">
            <summary>Field number for the "service_account_email" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.Types.OidcToken.ServiceAccountEmail">
            <summary>
            [Service account
            email](https://cloud.google.com/iam/docs/service-accounts)
            to be used for generating the OIDC token. The caller (for
            CreateSubscription, UpdateSubscription, and ModifyPushConfig RPCs) must
            have the iam.serviceAccounts.actAs permission for the service account.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PushConfig.Types.OidcToken.AudienceFieldNumber">
            <summary>Field number for the "audience" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PushConfig.Types.OidcToken.Audience">
            <summary>
            Audience to be used when generating OIDC token. The audience claim
            identifies the recipients that the JWT is intended for. The audience
            value is a single case-sensitive string. Having multiple values (array)
            for the audience field is not supported. More info about the OIDC JWT
            token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
            Note: if not specified, the Push endpoint URL will be used.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ReceivedMessage">
            <summary>
            A message and its corresponding acknowledgment ID.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ReceivedMessage.AckIdFieldNumber">
            <summary>Field number for the "ack_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ReceivedMessage.AckId">
            <summary>
            This ID can be used to acknowledge the received message.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ReceivedMessage.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ReceivedMessage.Message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ReceivedMessage.DeliveryAttemptFieldNumber">
            <summary>Field number for the "delivery_attempt" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ReceivedMessage.DeliveryAttempt">
             <summary>
             Delivery attempt counter is 1 + (the sum of number of NACKs and number of
             ack_deadline exceeds) for this message.
            
             A NACK is any call to ModifyAckDeadline with a 0 deadline. An ack_deadline
             exceeds event is whenever a message is not acknowledged within
             ack_deadline. Note that ack_deadline is initially
             Subscription.ackDeadlineSeconds, but may get extended automatically by
             the client library.
            
             The first delivery of a given message will have this value as 1. The value
             is calculated at best effort and is approximate.
            
             If a DeadLetterPolicy is not set on the subscription, this will be 0.
             &lt;b>EXPERIMENTAL:&lt;/b> This feature is part of a closed alpha release. This
             API might be changed in backward-incompatible ways and is not recommended
             for production use. It is not subject to any SLA or deprecation policy.
             </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.GetSubscriptionRequest">
            <summary>
            Request for the GetSubscription method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.GetSubscriptionRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetSubscriptionRequest.Subscription">
            <summary>
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetSubscriptionRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.GetSubscriptionRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest">
            <summary>
            Request for the UpdateSubscription method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.Subscription">
            <summary>
            Required. The updated subscription object.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateSubscriptionRequest.UpdateMask">
            <summary>
            Required. Indicates which fields in the provided subscription to update.
            Must be specified and non-empty.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSubscriptionsRequest">
            <summary>
            Request for the `ListSubscriptions` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.Project">
            <summary>
            Required. The name of the project in which to list subscriptions.
            Format is `projects/{project-id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageSize">
            <summary>
            Maximum number of subscriptions to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.PageToken">
            <summary>
            The value returned by the last `ListSubscriptionsResponse`; indicates that
            this is a continuation of a prior `ListSubscriptions` call, and that the
            system should return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.ProjectAsProjectName">
            <summary>
            <see cref="T:Google.Api.Gax.ResourceNames.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListSubscriptionsRequest.Project"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSubscriptionsResponse">
            <summary>
            Response for the `ListSubscriptions` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.SubscriptionsFieldNumber">
            <summary>Field number for the "subscriptions" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.Subscriptions">
            <summary>
            The subscriptions that match the request.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more subscriptions that match
            the request; this value should be passed in a new
            `ListSubscriptionsRequest` to get more subscriptions.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListSubscriptionsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest">
            <summary>
            Request for the DeleteSubscription method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.Subscription">
            <summary>
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.DeleteSubscriptionRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ModifyPushConfigRequest">
            <summary>
            Request for the ModifyPushConfig method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.Subscription">
            <summary>
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.PushConfigFieldNumber">
            <summary>Field number for the "push_config" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.PushConfig">
             <summary>
             Required. The push configuration for future deliveries.
            
             An empty `pushConfig` indicates that the Pub/Sub system should
             stop pushing messages from the given subscription and allow
             messages to be pulled and acknowledged - effectively pausing
             the subscription if `Pull` or `StreamingPull` is not called.
             </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ModifyPushConfigRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PullRequest">
            <summary>
            Request for the `Pull` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.Subscription">
            <summary>
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullRequest.ReturnImmediatelyFieldNumber">
            <summary>Field number for the "return_immediately" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.ReturnImmediately">
            <summary>
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullRequest.MaxMessagesFieldNumber">
            <summary>Field number for the "max_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.MaxMessages">
            <summary>
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.PullRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PullResponse">
            <summary>
            Response for the `Pull` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.PullResponse.ReceivedMessagesFieldNumber">
            <summary>Field number for the "received_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.PullResponse.ReceivedMessages">
            <summary>
            Received Pub/Sub messages. The list will be empty if there are no more
            messages available in the backlog. For JSON, the response can be entirely
            empty. The Pub/Sub system may return fewer than the `maxMessages` requested
            even if there are more messages available in the backlog.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest">
            <summary>
            Request for the ModifyAckDeadline method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.Subscription">
            <summary>
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckIdsFieldNumber">
            <summary>Field number for the "ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckIds">
            <summary>
            Required. List of acknowledgment IDs.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckDeadlineSecondsFieldNumber">
            <summary>Field number for the "ack_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.AckDeadlineSeconds">
            <summary>
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.AcknowledgeRequest">
            <summary>
            Request for the Acknowledge method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.AcknowledgeRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.Subscription">
            <summary>
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.AcknowledgeRequest.AckIdsFieldNumber">
            <summary>Field number for the "ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.AckIds">
            <summary>
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.AcknowledgeRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.StreamingPullRequest">
            <summary>
            Request for the `StreamingPull` streaming RPC method. This request is used to
            establish the initial stream as well as to stream acknowledgements and ack
            deadline modifications from the client to the server.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.Subscription">
            <summary>
            Required. The subscription for which to initialize the new stream. This must be
            provided in the first request on the stream, and must not be set in
            subsequent requests from client to server.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.AckIdsFieldNumber">
            <summary>Field number for the "ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.AckIds">
            <summary>
            List of acknowledgement IDs for acknowledging previously received messages
            (received on this stream or a different stream). If an ack ID has expired,
            the corresponding message may be redelivered later. Acknowledging a message
            more than once will not result in an error. If the acknowledgement ID is
            malformed, the stream will be aborted with status `INVALID_ARGUMENT`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineSecondsFieldNumber">
            <summary>Field number for the "modify_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineSeconds">
            <summary>
            The list of new ack deadlines for the IDs listed in
            `modify_deadline_ack_ids`. The size of this list must be the same as the
            size of `modify_deadline_ack_ids`. If it differs the stream will be aborted
            with `INVALID_ARGUMENT`. Each element in this list is applied to the
            element in the same position in `modify_deadline_ack_ids`. The new ack
            deadline is with respect to the time this request was sent to the Pub/Sub
            system. Must be >= 0. For example, if the value is 10, the new ack deadline
            will expire 10 seconds after this request is received. If the value is 0,
            the message is immediately made available for another streaming or
            non-streaming pull request. If the value is &lt; 0 (an error), the stream will
            be aborted with status `INVALID_ARGUMENT`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineAckIdsFieldNumber">
            <summary>Field number for the "modify_deadline_ack_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.ModifyDeadlineAckIds">
            <summary>
            List of acknowledgement IDs whose deadline will be modified based on the
            corresponding element in `modify_deadline_seconds`. This field can be used
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.StreamAckDeadlineSecondsFieldNumber">
            <summary>Field number for the "stream_ack_deadline_seconds" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.StreamAckDeadlineSeconds">
            <summary>
            Required. The ack deadline to use for the stream. This must be provided in the
            first request on the stream, but it can also be updated on subsequent
            requests from client to server. The minimum deadline you can specify is 10
            seconds. The maximum deadline you can specify is 600 seconds (10 minutes).
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullRequest.ClientIdFieldNumber">
            <summary>Field number for the "client_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.ClientId">
            <summary>
            A unique identifier that is used to distinguish client instances from each
            other. Only needs to be provided on the initial request. When a stream
            disconnects and reconnects for the same stream, the client_id should be set
            to the same value so that state associated with the old stream can be
            transferred to the new stream. The same client_id should not be used for
            different client instances.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.StreamingPullRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.StreamingPullResponse">
            <summary>
            Response for the `StreamingPull` method. This response is used to stream
            messages from the server to the client.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.StreamingPullResponse.ReceivedMessagesFieldNumber">
            <summary>Field number for the "received_messages" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.StreamingPullResponse.ReceivedMessages">
            <summary>
            Received Pub/Sub messages. This will not be empty.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.CreateSnapshotRequest">
            <summary>
            Request for the `CreateSnapshot` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.CreateSnapshotRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Name">
            <summary>
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"> resource
            name rules&lt;/a>. Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Subscription">
            <summary>
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
             (a) The existing backlog on the subscription. More precisely, this is
                 defined as the messages in the subscription's backlog that are
                 unacknowledged upon the successful completion of the
                 `CreateSnapshot` request; as well as:
             (b) Any messages published to the subscription's topic following the
                 successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.CreateSnapshotRequest.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Labels">
            <summary>
            See &lt;a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
            managing labels&lt;/a>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Name"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.CreateSnapshotRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.UpdateSnapshotRequest">
            <summary>
            Request for the UpdateSnapshot method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateSnapshotRequest.SnapshotFieldNumber">
            <summary>Field number for the "snapshot" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateSnapshotRequest.Snapshot">
            <summary>
            Required. The updated snapshot object.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.UpdateSnapshotRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.UpdateSnapshotRequest.UpdateMask">
            <summary>
            Required. Indicates which fields in the provided snapshot to update.
            Must be specified and non-empty.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Snapshot">
            <summary>
            A snapshot resource. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.Name">
            <summary>
            The name of the snapshot.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.TopicFieldNumber">
            <summary>Field number for the "topic" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.Topic">
            <summary>
            The name of the topic from which this snapshot is retaining messages.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.ExpireTimeFieldNumber">
            <summary>Field number for the "expire_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.ExpireTime">
            <summary>
            The snapshot is guaranteed to exist up until this time.
            A newly-created snapshot expires no later than 7 days from the time of its
            creation. Its exact lifetime is determined at creation by the existing
            backlog in the source subscription. Specifically, the lifetime of the
            snapshot is `7 days - (age of oldest unacked message in the subscription)`.
            For example, consider a subscription whose oldest unacked message is 3 days
            old. If a snapshot is created from this subscription, the snapshot -- which
            will always capture this 3-day-old backlog as long as the snapshot
            exists -- will expire in 4 days. The service will refuse to create a
            snapshot that would expire in less than 1 hour after creation.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.Snapshot.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.Labels">
            <summary>
            See &lt;a href="https://cloud.google.com/pubsub/docs/labels"> Creating and
            managing labels&lt;/a>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.SnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Snapshot.Name"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Snapshot.TopicAsTopicName">
            <summary><see cref="T:Google.Cloud.PubSub.V1.TopicName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.Snapshot.Topic"/> resource name property.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.GetSnapshotRequest">
            <summary>
            Request for the GetSnapshot method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.GetSnapshotRequest.SnapshotFieldNumber">
            <summary>Field number for the "snapshot" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetSnapshotRequest.Snapshot">
            <summary>
            Required. The name of the snapshot to get.
            Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.GetSnapshotRequest.SnapshotAsSnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.GetSnapshotRequest.Snapshot"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSnapshotsRequest">
            <summary>
            Request for the `ListSnapshots` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsRequest.ProjectFieldNumber">
            <summary>Field number for the "project" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.Project">
            <summary>
            Required. The name of the project in which to list snapshots.
            Format is `projects/{project-id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageSize">
            <summary>
            Maximum number of snapshots to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.PageToken">
            <summary>
            The value returned by the last `ListSnapshotsResponse`; indicates that this
            is a continuation of a prior `ListSnapshots` call, and that the system
            should return the next page of data.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.ProjectAsProjectName">
            <summary>
            <see cref="T:Google.Api.Gax.ResourceNames.ProjectName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.ListSnapshotsRequest.Project"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.ListSnapshotsResponse">
            <summary>
            Response for the `ListSnapshots` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsResponse.SnapshotsFieldNumber">
            <summary>Field number for the "snapshots" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsResponse.Snapshots">
            <summary>
            The resulting snapshots.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.ListSnapshotsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.ListSnapshotsResponse.NextPageToken">
            <summary>
            If not empty, indicates that there may be more snapshot that match the
            request; this value should be passed in a new `ListSnapshotsRequest`.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.ListSnapshotsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.DeleteSnapshotRequest">
            <summary>
            Request for the `DeleteSnapshot` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.SnapshotFieldNumber">
            <summary>Field number for the "snapshot" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.Snapshot">
            <summary>
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.SnapshotAsSnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.DeleteSnapshotRequest.Snapshot"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SeekRequest">
            <summary>
            Request for the `Seek` method.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SeekRequest.SubscriptionFieldNumber">
            <summary>Field number for the "subscription" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.Subscription">
            <summary>
            Required. The subscription to affect.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SeekRequest.TimeFieldNumber">
            <summary>Field number for the "time" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.Time">
            <summary>
            The time to seek to.
            Messages retained in the subscription that were published before this
            time are marked as acknowledged, and messages retained in the
            subscription that were published after this time are marked as
            unacknowledged. Note that this operation affects only those messages
            retained in the subscription (configured by the combination of
            `message_retention_duration` and `retain_acked_messages`). For example,
            if `time` corresponds to a point before the message retention
            window (or to a point before the system's notion of the subscription
            creation time), only retained messages will be marked as unacknowledged,
            and already-expunged messages will not be restored.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SeekRequest.SnapshotFieldNumber">
            <summary>Field number for the "snapshot" field.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.Snapshot">
            <summary>
            The snapshot to seek to. The snapshot's topic must be the same as that of
            the provided subscription.
            Format is `projects/{project}/snapshots/{snap}`.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SeekRequest.TargetOneofCase">
            <summary>Enum of possible cases for the "target" oneof.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.SubscriptionAsSubscriptionName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.SeekRequest.Subscription"/> resource name property.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SeekRequest.SnapshotAsSnapshotName">
            <summary>
            <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>-typed view over the <see cref="P:Google.Cloud.PubSub.V1.SeekRequest.Snapshot"/> resource name property.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SeekResponse">
            <summary>
            Response for the `Seek` method (this response is empty).
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.PubsubExtensions">
            <summary>
            Extensions to pubsub messages.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.PubsubExtensions.GetDeliveryAttempt(Google.Cloud.PubSub.V1.PubsubMessage)">
            <summary>
            Get the delivery attempt of this message, if it comes from a subscription
            that has dead-letter queues enabled.
            </summary>
            <remarks>
            Delivery attempt counter is 1 + (the sum of number of NACKs and number of
            ack_deadline exceeds) for this message.
            </remarks>
            <param name="msg"></param>
            <returns>The delivery attempt; or <c>null</c> if the subscription does not
            have dead-letter queues enabled.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscriber">
            <summary>
            The service that an application uses to manipulate subscriptions and to
            consume messages from a subscription via the `Pull` method or by
            establishing a bi-directional stream using the `StreamingPull` method.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.Subscriber.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase">
            <summary>Base class for server-side implementations of Subscriber</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.ServerCallContext)">
             <summary>
             Creates a subscription to a given topic. See the
             &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
             resource name rules&lt;/a>.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name
             format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
             generated name is populated in the returned Subscription object. Note that
             for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.Pull(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.StreamingPull(Grpc.Core.IAsyncStreamReader{Google.Cloud.PubSub.V1.StreamingPullRequest},Grpc.Core.IServerStreamWriter{Google.Cloud.PubSub.V1.StreamingPullResponse},Grpc.Core.ServerCallContext)">
            <summary>
            Establishes a stream with the server, which sends messages down to the
            client. The client streams acknowledgements and ack deadline modifications
            back to the server. The server will close the stream and return the status
            on any error. The server may close the stream with status `UNAVAILABLE` to
            reassign server-side resources, in which case, the client should
            re-establish the stream. Flow control can be achieved by configuring the
            underlying RPC channel.
            </summary>
            <param name="requestStream">Used for reading requests from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.GetSnapshot(Google.Cloud.PubSub.V1.GetSnapshotRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &lt;br>&lt;br>If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.UpdateSnapshot(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&lt;br>&lt;br>
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberBase.Seek(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient">
            <summary>Client for Subscriber</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for Subscriber</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Subscriber that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Creates a subscription to a given topic. See the
             &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
             resource name rules&lt;/a>.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name
             format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
             generated name is populated in the returned Subscription object. Note that
             for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.CallOptions)">
             <summary>
             Creates a subscription to a given topic. See the
             &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
             resource name rules&lt;/a>.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name
             format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
             generated name is populated in the returned Subscription object. Note that
             for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Creates a subscription to a given topic. See the
             &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
             resource name rules&lt;/a>.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name
             format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
             generated name is populated in the returned Subscription object. Note that
             for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Grpc.Core.CallOptions)">
             <summary>
             Creates a subscription to a given topic. See the
             &lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
             resource name rules&lt;/a>.
             If the subscription already exists, returns `ALREADY_EXISTS`.
             If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
             If the name is not provided in the request, the server will assign a random
             name for this subscription on the same project as the topic, conforming
             to the
             [resource name
             format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
             generated name is populated in the returned Subscription object. Note that
             for REST API requests, you must specify a name in the request.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.CallOptions)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Grpc.Core.CallOptions)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.CallOptions)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Grpc.Core.CallOptions)">
             <summary>
             Acknowledges the messages associated with the `ack_ids` in the
             `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
             from the subscription.
            
             Acknowledging a message whose ack deadline has expired may succeed,
             but such a message may be redelivered later. Acknowledging a message more
             than once will not result in an error.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Pull(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Pull(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.CallOptions)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Grpc.Core.CallOptions)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.StreamingPull(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Establishes a stream with the server, which sends messages down to the
            client. The client streams acknowledgements and ack deadline modifications
            back to the server. The server will close the stream and return the status
            on any error. The server may close the stream with status `UNAVAILABLE` to
            reassign server-side resources, in which case, the client should
            re-establish the stream. Flow control can be achieved by configuring the
            underlying RPC channel.
            </summary>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.StreamingPull(Grpc.Core.CallOptions)">
            <summary>
            Establishes a stream with the server, which sends messages down to the
            client. The client streams acknowledgements and ack deadline modifications
            back to the server. The server will close the stream and return the status
            on any error. The server may close the stream with status `UNAVAILABLE` to
            reassign server-side resources, in which case, the client should
            re-establish the stream. Flow control can be achieved by configuring the
            underlying RPC channel.
            </summary>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.CallOptions)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Grpc.Core.CallOptions)">
             <summary>
             Modifies the `PushConfig` for a specified subscription.
            
             This may be used to change a push subscription to a pull one (signified by
             an empty `PushConfig`) or vice versa, or change the endpoint URL and other
             attributes of a push subscription. Messages will accumulate for delivery
             continuously through the call regardless of changes to the `PushConfig`.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSnapshot(Google.Cloud.PubSub.V1.GetSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSnapshot(Google.Cloud.PubSub.V1.GetSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSnapshotAsync(Google.Cloud.PubSub.V1.GetSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.GetSnapshotAsync(Google.Cloud.PubSub.V1.GetSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &lt;br>&lt;br>If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &lt;br>&lt;br>If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &lt;br>&lt;br>If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &lt;br>&lt;br>If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSnapshot(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSnapshot(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSnapshotAsync(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.UpdateSnapshotAsync(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&lt;br>&lt;br>
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&lt;br>&lt;br>
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&lt;br>&lt;br>
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Grpc.Core.CallOptions)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&lt;br>&lt;br>
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Seek(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.Seek(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.CallOptions)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Grpc.Core.CallOptions)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &lt;a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek&lt;/a>
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.SubscriberClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.BindService(Google.Cloud.PubSub.V1.Subscriber.SubscriberBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.Subscriber.BindService(Grpc.Core.ServiceBinderBase,Google.Cloud.PubSub.V1.Subscriber.SubscriberBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.TopicName">
            <summary>Resource name for the <c>Topic</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.TopicName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.TopicName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.TopicName.ResourceNameType.ProjectTopic">
            <summary>A resource name with pattern <c>projects/{project}/topics/{topic}</c>.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.TopicName.ResourceNameType.DeletedTopic">
            <summary>A resource name with pattern <c>_deleted-topic_</c>.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> containing the provided <paramref name="unparsedResourceName"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.FromProjectTopic(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with the pattern <c>projects/{project}/topics/{topic}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="topicId">The <c>Topic</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.FromDeletedTopic">
            <summary>Creates a <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with the pattern <c>_deleted-topic_</c>.</summary>
            <returns>A new instance of <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Format(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with pattern
            <c>projects/{project}/topics/{topic}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="topicId">The <c>Topic</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with pattern <c>projects/{project}/topics/{topic}</c>
            .
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.FormatProjectTopic(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with pattern
            <c>projects/{project}/topics/{topic}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="topicId">The <c>Topic</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with pattern <c>projects/{project}/topics/{topic}</c>
            .
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.FormatDeletedTopic">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with pattern
            <c>_deleted-topic_</c>.
            </summary>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> with pattern <c>_deleted-topic_</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/topics/{topic}</c></description></item>
            <item><description><c>_deleted-topic_</c></description></item>
            </list>
            </remarks>
            <param name="topicName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> instance; optionally allowing an
            unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/topics/{topic}</c></description></item>
            <item><description><c>_deleted-topic_</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="topicName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.PubSub.V1.TopicName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.TryParse(System.String,Google.Cloud.PubSub.V1.TopicName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/topics/{topic}</c></description></item>
            <item><description><c>_deleted-topic_</c></description></item>
            </list>
            </remarks>
            <param name="topicName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.TryParse(System.String,System.Boolean,Google.Cloud.PubSub.V1.TopicName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/topics/{topic}</c></description></item>
            <item><description><c>_deleted-topic_</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="topicName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.PubSub.V1.TopicName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.TopicName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.PubSub.V1.TopicName"/> class from the component parts of pattern
            <c>projects/{project}/topics/{topic}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="topicId">The <c>Topic</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.Type">
            <summary>The <see cref="T:Google.Cloud.PubSub.V1.TopicName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.ProjectId">
            <summary>
            The <c>Project</c> ID. May be <c>null</c>, depending on which resource name is contained by this instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.TopicId">
            <summary>
            The <c>Topic</c> ID. May be <c>null</c>, depending on which resource name is contained by this instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.TopicName.IsKnownPattern">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.Equals(Google.Cloud.PubSub.V1.TopicName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.op_Equality(Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.TopicName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.TopicName.op_Inequality(Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.TopicName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriptionName">
            <summary>Resource name for the <c>Subscription</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriptionName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SubscriptionName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SubscriptionName.ResourceNameType.ProjectSubscription">
            <summary>A resource name with pattern <c>projects/{project}/subscriptions/{subscription}</c>.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> containing the provided
            <paramref name="unparsedResourceName"/>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.FromProjectSubscription(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> with the pattern <c>projects/{project}/subscriptions/{subscription}</c>
            .
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="subscriptionId">The <c>Subscription</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Format(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> with pattern
            <c>projects/{project}/subscriptions/{subscription}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="subscriptionId">The <c>Subscription</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> with pattern
            <c>projects/{project}/subscriptions/{subscription}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.FormatProjectSubscription(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> with pattern
            <c>projects/{project}/subscriptions/{subscription}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="subscriptionId">The <c>Subscription</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> with pattern
            <c>projects/{project}/subscriptions/{subscription}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/subscriptions/{subscription}</c></description></item>
            </list>
            </remarks>
            <param name="subscriptionName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/subscriptions/{subscription}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="subscriptionName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.PubSub.V1.SubscriptionName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.TryParse(System.String,Google.Cloud.PubSub.V1.SubscriptionName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/subscriptions/{subscription}</c></description></item>
            </list>
            </remarks>
            <param name="subscriptionName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.TryParse(System.String,System.Boolean,Google.Cloud.PubSub.V1.SubscriptionName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/subscriptions/{subscription}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="subscriptionName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.PubSub.V1.SubscriptionName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName"/> class from the component parts of pattern
            <c>projects/{project}/subscriptions/{subscription}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="subscriptionId">The <c>Subscription</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.Type">
            <summary>The <see cref="T:Google.Cloud.PubSub.V1.SubscriptionName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.SubscriptionId">
            <summary>
            The <c>Subscription</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource
            name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriptionName.IsKnownPattern">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.Equals(Google.Cloud.PubSub.V1.SubscriptionName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.op_Equality(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.SubscriptionName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriptionName.op_Inequality(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.SubscriptionName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SnapshotName">
            <summary>Resource name for the <c>Snapshot</c> resource.</summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SnapshotName.ResourceNameType">
            <summary>The possible contents of <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SnapshotName.ResourceNameType.Unparsed">
            <summary>An unparsed resource name.</summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SnapshotName.ResourceNameType.ProjectSnapshot">
            <summary>A resource name with pattern <c>projects/{project}/snapshots/{snapshot}</c>.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)">
            <summary>Creates a <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> containing an unparsed resource name.</summary>
            <param name="unparsedResourceName">The unparsed resource name. Must not be <c>null</c>.</param>
            <returns>
            A new instance of <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> containing the provided <paramref name="unparsedResourceName"/>
            .
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.FromProjectSnapshot(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> with the pattern <c>projects/{project}/snapshots/{snapshot}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="snapshotId">The <c>Snapshot</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>A new instance of <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> constructed from the provided ids.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Format(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> with pattern
            <c>projects/{project}/snapshots/{snapshot}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="snapshotId">The <c>Snapshot</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> with pattern
            <c>projects/{project}/snapshots/{snapshot}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.FormatProjectSnapshot(System.String,System.String)">
            <summary>
            Formats the IDs into the string representation of this <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> with pattern
            <c>projects/{project}/snapshots/{snapshot}</c>.
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="snapshotId">The <c>Snapshot</c> ID. Must not be <c>null</c> or empty.</param>
            <returns>
            The string representation of this <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> with pattern
            <c>projects/{project}/snapshots/{snapshot}</c>.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Parse(System.String)">
            <summary>Parses the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> instance.</summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/snapshots/{snapshot}</c></description></item>
            </list>
            </remarks>
            <param name="snapshotName">The resource name in string form. Must not be <c>null</c>.</param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Parse(System.String,System.Boolean)">
            <summary>
            Parses the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> instance; optionally allowing an
            unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/snapshots/{snapshot}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="snapshotName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.PubSub.V1.SnapshotName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <returns>The parsed <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> if successful.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.TryParse(System.String,Google.Cloud.PubSub.V1.SnapshotName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> instance.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/snapshots/{snapshot}</c></description></item>
            </list>
            </remarks>
            <param name="snapshotName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.TryParse(System.String,System.Boolean,Google.Cloud.PubSub.V1.SnapshotName@)">
            <summary>
            Tries to parse the given resource name string into a new <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> instance; optionally
            allowing an unparseable resource name.
            </summary>
            <remarks>
            To parse successfully, the resource name must be formatted as one of the following:
            <list type="bullet">
            <item><description><c>projects/{project}/snapshots/{snapshot}</c></description></item>
            </list>
            Or may be in any format if <paramref name="allowUnparsed"/> is <c>true</c>.
            </remarks>
            <param name="snapshotName">The resource name in string form. Must not be <c>null</c>.</param>
            <param name="allowUnparsed">
            If <c>true</c> will successfully store an unparseable resource name into the <see cref="P:Google.Cloud.PubSub.V1.SnapshotName.UnparsedResource"/>
            property; otherwise will throw an <see cref="T:System.ArgumentException"/> if an unparseable resource name is
            specified.
            </param>
            <param name="result">
            When this method returns, the parsed <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/>, or <c>null</c> if parsing failed.
            </param>
            <returns><c>true</c> if the name was parsed successfully; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of a <see cref="T:Google.Cloud.PubSub.V1.SnapshotName"/> class from the component parts of pattern
            <c>projects/{project}/snapshots/{snapshot}</c>
            </summary>
            <param name="projectId">The <c>Project</c> ID. Must not be <c>null</c> or empty.</param>
            <param name="snapshotId">The <c>Snapshot</c> ID. Must not be <c>null</c> or empty.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.Type">
            <summary>The <see cref="T:Google.Cloud.PubSub.V1.SnapshotName.ResourceNameType"/> of the contained resource name.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.UnparsedResource">
            <summary>
            The contained <see cref="T:Google.Api.Gax.UnparsedResourceName"/>. Only non-<c>null</c> if this instance contains an
            unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.ProjectId">
            <summary>
            The <c>Project</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.SnapshotId">
            <summary>
            The <c>Snapshot</c> ID. Will not be <c>null</c>, unless this instance contains an unparsed resource name.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SnapshotName.IsKnownPattern">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.Equals(Google.Cloud.PubSub.V1.SnapshotName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.op_Equality(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SnapshotName)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SnapshotName.op_Inequality(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SnapshotName)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClient">
            <summary>
            A PubSub subscriber that is associated with a specific <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/>.
            </summary>
            <remarks>
            <para>To receive messages, the <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.StartAsync(System.Func{Google.Cloud.PubSub.V1.PubsubMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task{Google.Cloud.PubSub.V1.SubscriberClient.Reply}})"/> method must be called,
            with a suitable message handler.</para>
            <para>The message handler <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient.Reply"/> states whether to acknowledge the message;
            if acknowledged then (under normal conditions) it will not be received on this subscription again.</para>
            <para>But note that it is always possible to receive duplicate messages. This services
            guarantees "at least once" delivery, not "only once" delivery.</para>
            </remarks>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClient.Reply">
            <summary>
            Reply from a message handler; whether to <see cref="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Ack"/>
            or <see cref="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Nack"/> the message to the server. 
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Nack">
            <summary>
            Message not handled successfully.
            </summary>
        </member>
        <member name="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Ack">
            <summary>
            Message handled successfully.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClient.Settings">
            <summary>
            Settings for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.
            Defaults will be used for <c>null</c> properties.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Settings.#ctor">
            <summary>
            Create a new instance.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.FlowControlSettings">
            <summary>
            Flow control settings.
            If <c>null</c>, uses flow control settings from <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultFlowControlSettings"/>. 
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.AckDeadline">
            <summary>
            The lease time before which a message must either be ACKed
            or have its lease extended. This is truncated to the nearest second.
            If <c>null</c>, uses the default of <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.AckDeadline"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.AckExtensionWindow">
            <summary>
            Duration before <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.AckDeadline"/> at which the message ACK deadline
            is automatically extended.
            If <c>null</c>, uses the default of <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultAckExtensionWindow"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.MaxTotalAckExtension">
            <summary>
            Maximum duration for which a message ACK deadline will be extended.
            If <c>null</c>, uses the default of <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultMaxTotalAckExtension"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.Scheduler">
            <summary>
            The <see cref="T:Google.Api.Gax.IScheduler"/> used to schedule delays.
            If <c>null</c>, the default <see cref="T:Google.Api.Gax.SystemScheduler"/> is used.
            This is usually only used for testing.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Settings.Clone">
            <summary>
            Create a clone of this object.
            </summary>
            <returns>A clone of this object.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings">
            <summary>
            Settings for creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>s.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings.#ctor(System.Nullable{System.Int32},Google.Cloud.PubSub.V1.SubscriberServiceApiSettings,Grpc.Core.ChannelCredentials,System.String)">
            <summary>
            Instantiate with the specified settings.
            </summary>
            <param name="clientCount">Optional.
            The number of <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>s to create and use within a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance.</param>
            <param name="subscriberServiceApiSettings">Optional. The settings to use when creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.</param>
            <param name="credentials">Optional. Credentials to use when creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.</param>
            <param name="serviceEndpoint">Optional.
            The <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings.ServiceEndpoint"/> to use when creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings.ClientCount">
            <summary>
            The number of <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>s to create and use within a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance.
            If set, must be in the range 1 to 256 (inclusive).
            If <c>null</c>, defaults to the CPU count on the machine this is being executed on.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings.SubscriberServiceApiSettings">
            <summary>
            The settings to use when creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.
            If <c>null</c>, defaults to <see cref="M:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.GetDefault"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings.Credentials">
            <summary>
            Credentials to use when creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.
            If <c>null</c>, defaults to using the default credentials.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings.ServiceEndpoint">
            <summary>
            The endpoint to use when creating <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.
            If <c>null</c>, defaults to <see cref="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DefaultEndpoint"/>.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultFlowControlSettings">
            <summary>
            Default <see cref="T:Google.Api.Gax.FlowControlSettings"/> for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.
            Allows 1,000 outstanding messages; and 100Mb outstanding bytes.
            </summary>
            <returns>Default <see cref="T:Google.Api.Gax.FlowControlSettings"/> for <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.MinimumAckDeadline">
            <summary>
            The service-defined minimum message ACKnowledgement deadline of 10 seconds.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.MaximumAckDeadline">
            <summary>
            The service-defined maximum message ACKnowledgement deadline of 10 minutes.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultAckDeadline">
            <summary>
            The default message ACKnowledgement deadline of 60 seconds.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.MinimumAckExtensionWindow">
            <summary>
            The minimum message ACKnowledgement extension window of 50 milliseconds.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultAckExtensionWindow">
            <summary>
            The default message ACKnowledgement extension window of 15 seconds.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.DefaultMaxTotalAckExtension">
            <summary>
            The default maximum total ACKnowledgement extension of 60 minutes.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.CreateAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings,Google.Cloud.PubSub.V1.SubscriberClient.Settings)">
            <summary>
            Create a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/>.
            The default <paramref name="settings"/> and <paramref name="clientCreationSettings"/> are suitable for machines with
            high network bandwidth (e.g. Google Compute Engine instances). If running with more limited network bandwidth, some
            settings may need changing; especially <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.AckDeadline"/>.
            </summary>
            <param name="subscriptionName">The <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/> to receive messages from.</param>
            <param name="clientCreationSettings">Optional. <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient.ClientCreationSettings"/> specifying how to create
            <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>s.</param>
            <param name="settings">Optional. <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient.Settings"/> for creating a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</param>
            <returns>A <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.Create(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.SubscriberServiceApiClient},Google.Cloud.PubSub.V1.SubscriberClient.Settings)">
            <summary>
            Create a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/>.
            The gRPC <see cref="T:Grpc.Core.Channel"/>s underlying the provided <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>s must have their
            maximum send and maximum receive sizes set to unlimited, otherwise performance will be severly affected,
            possibly causing a deadlock.
            The default <paramref name="settings"/> are suitable for machines with high network bandwidth (e.g. Google
            Compute Engine instances). If running with more limited network bandwidth, some settings may need changing;
            especially <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.Settings.AckDeadline"/>.
            </summary>
            <param name="subscriptionName">The <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/> to receive messages from.</param>
            <param name="clients">The <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>s to use in a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.
            For high performance, these should all use distinct <see cref="T:Grpc.Core.Channel"/>s.</param>
            <param name="settings">Optional. <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient.Settings"/> for creating a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</param>
            <returns>A <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance associated with the specified <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/>.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName">
            <summary>
            The associated <see cref="P:Google.Cloud.PubSub.V1.SubscriberClient.SubscriptionName"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.StartAsync(System.Func{Google.Cloud.PubSub.V1.PubsubMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task{Google.Cloud.PubSub.V1.SubscriberClient.Reply}})">
            <summary>
            Starts receiving messages. The returned <see cref="T:System.Threading.Tasks.Task"/> completes when either <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.StopAsync(System.Threading.CancellationToken)"/> is called
            or if an unrecoverable fault occurs. See <see cref="M:Google.Cloud.PubSub.V1.SubscriberClient.StopAsync(System.Threading.CancellationToken)"/> for more details.
            This method cannot be called more than once per <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> instance.
            </summary>
            <param name="handlerAsync">The handler function that is passed all received messages.
            This function may be called on multiple threads concurrently. Return <see cref="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Ack"/> from this function
            to ACKnowledge this message (implying it won't be received again); or return <see cref="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Nack"/> to Not
            ACKnowledge this message (implying it will be received again). If this function throws any Exception, then
            it behaves as if it returned <see cref="F:Google.Cloud.PubSub.V1.SubscriberClient.Reply.Nack"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the subscriber is stopped, or if an unrecoverable error occurs.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stop this <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>. Cancelling <paramref name="hardStopToken"/> aborts the
            clean stop process, and may leave some handled messages un-ACKnowledged.
            The returned <see cref="T:System.Threading.Tasks.Task"/> completes when all handled messages have been ACKnowledged.
            The returned <see cref="T:System.Threading.Tasks.Task"/> faults if there is an unrecoverable error with the underlying service.
            The returned <see cref="T:System.Threading.Tasks.Task"/> cancels if <paramref name="hardStopToken"/> is cancelled.
            </summary>
            <param name="hardStopToken">Cancel this <see cref="T:System.Threading.CancellationToken"/> to abort handlers and ACKnowledgement.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when all handled messages have been ACKnowledged;
            faults on unrecoverable service errors; or cancels if <paramref name="hardStopToken"/> is cancelled.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClient.StopAsync(System.TimeSpan)">
            <summary>
            Stop this <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>. If <paramref name="timeout"/> expires, the
            clean stop process will be aborted, and may leave some handled messages un-ACKnowledged.
            The returned <see cref="T:System.Threading.Tasks.Task"/> completes when all handled messages have been ACKnowledged.
            The returned <see cref="T:System.Threading.Tasks.Task"/> faults if there is an unrecoverable error with the underlying service.
            The returned <see cref="T:System.Threading.Tasks.Task"/> cancels if <paramref name="timeout"/> expires.
            </summary>
            <param name="timeout">After this period, abort handling and ACKnowledging messages.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when all handled messages have been ACKnowledged;
            faults on unrecoverable service errors; or cancels if <paramref name="timeout"/> expires.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClientImpl">
            <summary>
            Implementation of <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>. 
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.#ctor(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{Google.Cloud.PubSub.V1.SubscriberServiceApiClient},Google.Cloud.PubSub.V1.SubscriberClient.Settings,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Instantiate a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClientImpl"/> associated with the specified <see cref="P:Google.Cloud.PubSub.V1.SubscriberClientImpl.SubscriptionName"/>.
            </summary>
            <param name="subscriptionName">The <see cref="P:Google.Cloud.PubSub.V1.SubscriberClientImpl.SubscriptionName"/> to receive messages from.</param>
            <param name="clients">The <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>s to use in a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.
            For high performance, these should all use distinct <see cref="T:Grpc.Core.Channel"/>s.</param>
            <param name="settings"><see cref="T:Google.Cloud.PubSub.V1.SubscriberClient.Settings"/> for creating a <see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/>.</param>
            <param name="shutdown">Function to call on this <see cref="T:Google.Cloud.PubSub.V1.SubscriberClientImpl"/> shutdown.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberClientImpl.SubscriptionName">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StartAsync(System.Func{Google.Cloud.PubSub.V1.PubsubMessage,System.Threading.CancellationToken,System.Threading.Tasks.Task{Google.Cloud.PubSub.V1.SubscriberClient.Reply}})">
            <inheritdoc />
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClientImpl.Flow">
            <summary>
            Implements flow control for received messages.
            Processes received messages so long as the current outstanding message-count and byte-count are below limits.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.Flow.IsFlowOk">
            <summary>
            Is flow-control currently within limits. Pre-condition: must be locked.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.Flow.Process(System.Int64,System.String,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Call <paramref name="fn"/> when allowed to do so by the flow-control limits.
            This will alter the current byte-count (by <paramref name="byteCount"/>) and
            element-count (by 1), and only call <paramref name="fn"/> once flow-control is
            within the limits.
            The returned Task will complete once <paramref name="fn"/> has been scheduled
            for execution on a Task; note this does not wait until <paramref name="fn"/>
            has completed.
            </summary>
            <param name="byteCount">The number of bytes in the element associated with <paramref name="fn"/>.</param>
            <param name="orderingKey">The ordering key for this message. Empty string if no ordering key.</param>
            <param name="fn">The function to execute.</param>
            <returns>A Task that completes once <paramref name="fn"/> has been scheduled for execution.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClientImpl.RequeueableQueue`1">
            <summary>
            A queue that allows data to be requeued at the front of the queue.
            Requeued items are queued after previously requeued items, but before queued items.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberClientImpl.RequeueableQueue`1.Dequeue(System.Int32,System.Predicate{`0})">
            <summary>
            Dequeue up to maxCount items.
            Any items that are not included in the return value due to <c>includeFn</c> are discarded.
            </summary>
            <param name="maxCount">Maximum count of items to dequeue.</param>
            <param name="includeFn">If not null, must return <c>true</c> for the item to be included.</param>
            <returns></returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberClientImpl.SingleChannel">
            <summary>
            Controls a single <see cref="T:Grpc.Core.Channel"/>/<see cref="T:Google.Cloud.PubSub.V1.SubscriberClient"/> within this
            <see cref="T:Google.Cloud.PubSub.V1.SubscriberClientImpl"/>. This class controls the pulling of messages, and
            the pushing of message acks and lease-extensions back to the server.
            It also manages error conditions within the channel, restarting RPCs as required.
            </summary>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings">
            <summary>Settings for <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> instances.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.SetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceClient.SetIamPolicy</c> and <c>SubscriberServiceClient.SetIamPolicyAsync</c>.
            </summary>
            <remarks>By default, retry will not be attempted.</remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.GetIamPolicySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceClient.GetIamPolicy</c> and <c>SubscriberServiceClient.GetIamPolicyAsync</c>.
            </summary>
            <remarks>By default, retry will not be attempted.</remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.TestIamPermissionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceClient.TestIamPermissions</c> and <c>SubscriberServiceClient.TestIamPermissionsAsync</c>.
            </summary>
            <remarks>By default, retry will not be attempted.</remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.GetDefault">
            <summary>Get a new instance of the default <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings"/>.</summary>
            <returns>A new instance of the default <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.#ctor">
            <summary>Constructs a new <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings"/> object with default settings.</summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.CreateSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.CreateSubscription</c> and
            <c>SubscriberServiceApiClient.CreateSubscriptionAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.GetSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.GetSubscription</c> and <c>SubscriberServiceApiClient.GetSubscriptionAsync</c>
            .
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.UpdateSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.UpdateSubscription</c> and
            <c>SubscriberServiceApiClient.UpdateSubscriptionAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.ListSubscriptionsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.ListSubscriptions</c> and <c>SubscriberServiceApiClient.ListSubscriptionsAsync</c>
            .
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.DeleteSubscriptionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.DeleteSubscription</c> and
            <c>SubscriberServiceApiClient.DeleteSubscriptionAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.ModifyAckDeadlineSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.ModifyAckDeadline</c> and <c>SubscriberServiceApiClient.ModifyAckDeadlineAsync</c>
            .
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.AcknowledgeSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.Acknowledge</c> and <c>SubscriberServiceApiClient.AcknowledgeAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.PullSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.Pull</c> and <c>SubscriberServiceApiClient.PullAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.StreamingPullSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.StreamingPull</c> and <c>SubscriberServiceApiClient.StreamingPullAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.StreamingPullStreamingSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.BidirectionalStreamingSettings"/> for calls to
            <c>SubscriberServiceApiClient.StreamingPull</c> and <c>SubscriberServiceApiClient.StreamingPullAsync</c>.
            </summary>
            <remarks>The default local send queue size is 100.</remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.ModifyPushConfigSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.ModifyPushConfig</c> and <c>SubscriberServiceApiClient.ModifyPushConfigAsync</c>
            .
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.GetSnapshotSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.GetSnapshot</c> and <c>SubscriberServiceApiClient.GetSnapshotAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.ListSnapshotsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.ListSnapshots</c> and <c>SubscriberServiceApiClient.ListSnapshotsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.CreateSnapshotSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.CreateSnapshot</c> and <c>SubscriberServiceApiClient.CreateSnapshotAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.UpdateSnapshotSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.UpdateSnapshot</c> and <c>SubscriberServiceApiClient.UpdateSnapshotAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.DeleteSnapshotSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.DeleteSnapshot</c> and <c>SubscriberServiceApiClient.DeleteSnapshotAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.SeekSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>SubscriberServiceApiClient.Seek</c> and <c>SubscriberServiceApiClient.SeekAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>No timeout is applied.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings.Clone">
            <summary>Creates a deep clone of this object, with all the same property values.</summary>
            <returns>A deep clone of this <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings"/> object.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient">
            <summary>SubscriberServiceApi client wrapper, for convenient use.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicyAsync(Google.Api.Gax.IResourceName,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicyAsync(Google.Api.Gax.IResourceName,Google.Cloud.Iam.V1.Policy,System.Threading.CancellationToken)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicy(Google.Api.Gax.IResourceName,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicyAsync(System.String,Google.Cloud.Iam.V1.Policy,System.Threading.CancellationToken)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicy(System.String,Google.Cloud.Iam.V1.Policy,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy is being specified.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="policy">
             REQUIRED: The complete policy to be applied to the `resource`. The size of
             the policy is limited to a few 10s of KB. An empty policy is a
             valid policy but certain Cloud Platform services (such as Projects)
             might reject them.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,System.Threading.CancellationToken)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicyAsync(Google.Api.Gax.IResourceName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicyAsync(Google.Api.Gax.IResourceName,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicy(Google.Api.Gax.IResourceName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicyAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicy(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="resource">
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissionsAsync(Google.Api.Gax.IResourceName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissionsAsync(Google.Api.Gax.IResourceName,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissions(Google.Api.Gax.IResourceName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissionsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissions(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="resource">
             REQUIRED: The resource for which the policy detail is being requested.
             See the operation documentation for the appropriate value for this field.
             </param>
             <param name="permissions">
             The set of permissions to check for the `resource`. Permissions with
             wildcards (such as '*' or 'storage.*') are not allowed. For more
             information see
             [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,System.Threading.CancellationToken)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DefaultEndpoint">
            <summary>
            The default endpoint for the SubscriberServiceApi service, which is a host of "pubsub.googleapis.com" and a
            port of 443.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DefaultScopes">
            <summary>The default SubscriberServiceApi scopes.</summary>
            <remarks>
            The default SubscriberServiceApi scopes are:
            <list type="bullet">
            <item><description>https://www.googleapis.com/auth/cloud-platform</description></item>
            <item><description>https://www.googleapis.com/auth/pubsub</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> using the default credentials, endpoint
            and settings. To specify custom credentials or other settings, use
            <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder"/>.
            </summary>
            <param name="cancellationToken">
            The <see cref="T:System.Threading.CancellationToken"/> to use while creating the client.
            </param>
            <returns>The task representing the created <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Create">
            <summary>
            Synchronously creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> using the default credentials, endpoint and
            settings. To specify custom credentials or other settings, use
            <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Create(Grpc.Core.CallInvoker,Google.Cloud.PubSub.V1.SubscriberServiceApiSettings)">
            <summary>
            Creates a <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> which uses the specified call invoker for remote
            operations.
            </summary>
            <param name="callInvoker">
            The <see cref="T:Grpc.Core.CallInvoker"/> for remote operations. Must not be null.
            </param>
            <param name="settings">Optional <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Create"/> and
            <see cref="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateAsync(System.Threading.CancellationToken)"/>. Channels which weren't automatically created are not
            affected.
            </summary>
            <remarks>
            After calling this method, further calls to <see cref="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Create"/> and
            <see cref="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateAsync(System.Threading.CancellationToken)"/> will create new channels, which could in turn be shut down
            by another call to this method.
            </remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GrpcClient">
            <summary>The underlying gRPC SubscriberServiceApi client</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscription(System.String,System.String,Google.Cloud.PubSub.V1.PushConfig,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </param>
            <param name="topic">
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </param>
            <param name="pushConfig">
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </param>
            <param name="ackDeadlineSeconds">
            The approximate amount of time (on a best-effort basis) Pub/Sub waits for
            the subscriber to acknowledge receipt before resending the message. In the
            interval after the message is delivered and before it is acknowledged, it
            is considered to be &amp;lt;i&amp;gt;outstanding&amp;lt;/i&amp;gt;. During that time period, the
            message will not be redelivered (on a best-effort basis).
            
            For pull subscriptions, this value is used as the initial value for the ack
            deadline. To override this value for a given message, call
            `ModifyAckDeadline` with the corresponding `ack_id` if using
            non-streaming pull or send the `ack_id` in a
            `StreamingModifyAckDeadlineRequest` if using streaming pull.
            The minimum custom deadline you can specify is 10 seconds.
            The maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used.
            
            For push delivery, this value is also used to set the request timeout for
            the call to the push endpoint.
            
            If the subscriber never acknowledges the message, the Pub/Sub
            system will eventually redeliver the message.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscriptionAsync(System.String,System.String,Google.Cloud.PubSub.V1.PushConfig,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </param>
            <param name="topic">
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </param>
            <param name="pushConfig">
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </param>
            <param name="ackDeadlineSeconds">
            The approximate amount of time (on a best-effort basis) Pub/Sub waits for
            the subscriber to acknowledge receipt before resending the message. In the
            interval after the message is delivered and before it is acknowledged, it
            is considered to be &amp;lt;i&amp;gt;outstanding&amp;lt;/i&amp;gt;. During that time period, the
            message will not be redelivered (on a best-effort basis).
            
            For pull subscriptions, this value is used as the initial value for the ack
            deadline. To override this value for a given message, call
            `ModifyAckDeadline` with the corresponding `ack_id` if using
            non-streaming pull or send the `ack_id` in a
            `StreamingModifyAckDeadlineRequest` if using streaming pull.
            The minimum custom deadline you can specify is 10 seconds.
            The maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used.
            
            For push delivery, this value is also used to set the request timeout for
            the call to the push endpoint.
            
            If the subscriber never acknowledges the message, the Pub/Sub
            system will eventually redeliver the message.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscriptionAsync(System.String,System.String,Google.Cloud.PubSub.V1.PushConfig,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </param>
            <param name="topic">
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </param>
            <param name="pushConfig">
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </param>
            <param name="ackDeadlineSeconds">
            The approximate amount of time (on a best-effort basis) Pub/Sub waits for
            the subscriber to acknowledge receipt before resending the message. In the
            interval after the message is delivered and before it is acknowledged, it
            is considered to be &amp;lt;i&amp;gt;outstanding&amp;lt;/i&amp;gt;. During that time period, the
            message will not be redelivered (on a best-effort basis).
            
            For pull subscriptions, this value is used as the initial value for the ack
            deadline. To override this value for a given message, call
            `ModifyAckDeadline` with the corresponding `ack_id` if using
            non-streaming pull or send the `ack_id` in a
            `StreamingModifyAckDeadlineRequest` if using streaming pull.
            The minimum custom deadline you can specify is 10 seconds.
            The maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used.
            
            For push delivery, this value is also used to set the request timeout for
            the call to the push endpoint.
            
            If the subscriber never acknowledges the message, the Pub/Sub
            system will eventually redeliver the message.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscription(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PushConfig,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </param>
            <param name="topic">
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </param>
            <param name="pushConfig">
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </param>
            <param name="ackDeadlineSeconds">
            The approximate amount of time (on a best-effort basis) Pub/Sub waits for
            the subscriber to acknowledge receipt before resending the message. In the
            interval after the message is delivered and before it is acknowledged, it
            is considered to be &amp;lt;i&amp;gt;outstanding&amp;lt;/i&amp;gt;. During that time period, the
            message will not be redelivered (on a best-effort basis).
            
            For pull subscriptions, this value is used as the initial value for the ack
            deadline. To override this value for a given message, call
            `ModifyAckDeadline` with the corresponding `ack_id` if using
            non-streaming pull or send the `ack_id` in a
            `StreamingModifyAckDeadlineRequest` if using streaming pull.
            The minimum custom deadline you can specify is 10 seconds.
            The maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used.
            
            For push delivery, this value is also used to set the request timeout for
            the call to the push endpoint.
            
            If the subscriber never acknowledges the message, the Pub/Sub
            system will eventually redeliver the message.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PushConfig,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </param>
            <param name="topic">
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </param>
            <param name="pushConfig">
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </param>
            <param name="ackDeadlineSeconds">
            The approximate amount of time (on a best-effort basis) Pub/Sub waits for
            the subscriber to acknowledge receipt before resending the message. In the
            interval after the message is delivered and before it is acknowledged, it
            is considered to be &amp;lt;i&amp;gt;outstanding&amp;lt;/i&amp;gt;. During that time period, the
            message will not be redelivered (on a best-effort basis).
            
            For pull subscriptions, this value is used as the initial value for the ack
            deadline. To override this value for a given message, call
            `ModifyAckDeadline` with the corresponding `ack_id` if using
            non-streaming pull or send the `ack_id` in a
            `StreamingModifyAckDeadlineRequest` if using streaming pull.
            The minimum custom deadline you can specify is 10 seconds.
            The maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used.
            
            For push delivery, this value is also used to set the request timeout for
            the call to the push endpoint.
            
            If the subscriber never acknowledges the message, the Pub/Sub
            system will eventually redeliver the message.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.TopicName,Google.Cloud.PubSub.V1.PushConfig,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. The name of the subscription. It must have the format
            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must
            start with a letter, and contain only letters (`[A-Za-z]`), numbers
            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),
            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters
            in length, and it must not start with `"goog"`.
            </param>
            <param name="topic">
            Required. The name of the topic from which this subscription is receiving messages.
            Format is `projects/{project}/topics/{topic}`.
            The value of this field will be `_deleted-topic_` if the topic has been
            deleted.
            </param>
            <param name="pushConfig">
            If push delivery is used with this subscription, this field is
            used to configure it. An empty `pushConfig` signifies that the subscriber
            will pull and ack messages using API methods.
            </param>
            <param name="ackDeadlineSeconds">
            The approximate amount of time (on a best-effort basis) Pub/Sub waits for
            the subscriber to acknowledge receipt before resending the message. In the
            interval after the message is delivered and before it is acknowledged, it
            is considered to be &amp;lt;i&amp;gt;outstanding&amp;lt;/i&amp;gt;. During that time period, the
            message will not be redelivered (on a best-effort basis).
            
            For pull subscriptions, this value is used as the initial value for the ack
            deadline. To override this value for a given message, call
            `ModifyAckDeadline` with the corresponding `ack_id` if using
            non-streaming pull or send the `ack_id` in a
            `StreamingModifyAckDeadlineRequest` if using streaming pull.
            The minimum custom deadline you can specify is 10 seconds.
            The maximum custom deadline you can specify is 600 seconds (10 minutes).
            If this parameter is 0, a default value of 10 seconds is used.
            
            For push delivery, this value is also used to set the request timeout for
            the call to the push endpoint.
            
            If the subscriber never acknowledges the message, the Pub/Sub
            system will eventually redeliver the message.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscription(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscriptionAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscription(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="subscription">
            Required. The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSubscriptions(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="project">
            Required. The name of the project in which to list subscriptions.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSubscriptionsAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="project">
            Required. The name of the project in which to list subscriptions.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSubscriptions(Google.Api.Gax.ResourceNames.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="project">
            Required. The name of the project in which to list subscriptions.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSubscriptionsAsync(Google.Api.Gax.ResourceNames.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="project">
            Required. The name of the project in which to list subscriptions.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscription(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscriptionAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscription(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="subscription">
            Required. The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadline(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadlineAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadlineAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadline(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. List of acknowledgment IDs.
            </param>
            <param name="ackDeadlineSeconds">
            Required. The new ack deadline with respect to the time this request was sent to
            the Pub/Sub system. For example, if the value is 10, the new
            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call
            was made. Specifying zero might immediately make the message available for
            delivery to another subscriber client. This typically results in an
            increase in the rate of message redeliveries (that is, duplicates).
            The minimum deadline you can specify is 0 seconds.
            The maximum deadline you can specify is 600 seconds (10 minutes).
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,System.Threading.CancellationToken)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Acknowledge(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="subscription">
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.AcknowledgeAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="subscription">
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.AcknowledgeAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="subscription">
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Acknowledge(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="subscription">
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="subscription">
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.AcknowledgeAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="subscription">
            Required. The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="ackIds">
            Required. The acknowledgment ID for the messages being acknowledged that was returned
            by the Pub/Sub system in the `Pull` response. Must not be empty.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Pull(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.PullAsync(Google.Cloud.PubSub.V1.PullRequest,System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Pull(System.String,System.Boolean,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </param>
            <param name="maxMessages">
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.PullAsync(System.String,System.Boolean,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </param>
            <param name="maxMessages">
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.PullAsync(System.String,System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </param>
            <param name="maxMessages">
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Pull(Google.Cloud.PubSub.V1.SubscriptionName,System.Boolean,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </param>
            <param name="maxMessages">
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.PullAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Boolean,System.Int32,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </param>
            <param name="maxMessages">
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.PullAsync(Google.Cloud.PubSub.V1.SubscriptionName,System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="subscription">
            Required. The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="returnImmediately">
            If this field set to true, the system will respond immediately even if
            it there are no messages available to return in the `Pull` response.
            Otherwise, the system may wait (for a bounded amount of time) until at
            least one message is available, rather than returning no messages.
            </param>
            <param name="maxMessages">
            Required. The maximum number of messages to return for this request. Must be a
            positive integer. The Pub/Sub system may return fewer than the number
            specified.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.StreamingPullStream">
            <summary>
            Bidirectional streaming methods for
            <see cref="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.StreamingPull(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.StreamingPull(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Establishes a stream with the server, which sends messages down to the
            client. The client streams acknowledgements and ack deadline modifications
            back to the server. The server will close the stream and return the status
            on any error. The server may close the stream with status `UNAVAILABLE` to
            reassign server-side resources, in which case, the client should
            re-establish the stream. Flow control can be achieved by configuring the
            underlying RPC channel.
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <param name="streamingSettings">If not null, applies streaming overrides to this RPC call.</param>
            <returns>The client-server stream.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfig(System.String,Google.Cloud.PubSub.V1.PushConfig,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="pushConfig">
            Required. The push configuration for future deliveries.
            
            An empty `pushConfig` indicates that the Pub/Sub system should
            stop pushing messages from the given subscription and allow
            messages to be pulled and acknowledged - effectively pausing
            the subscription if `Pull` or `StreamingPull` is not called.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfigAsync(System.String,Google.Cloud.PubSub.V1.PushConfig,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="pushConfig">
            Required. The push configuration for future deliveries.
            
            An empty `pushConfig` indicates that the Pub/Sub system should
            stop pushing messages from the given subscription and allow
            messages to be pulled and acknowledged - effectively pausing
            the subscription if `Pull` or `StreamingPull` is not called.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfigAsync(System.String,Google.Cloud.PubSub.V1.PushConfig,System.Threading.CancellationToken)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="pushConfig">
            Required. The push configuration for future deliveries.
            
            An empty `pushConfig` indicates that the Pub/Sub system should
            stop pushing messages from the given subscription and allow
            messages to be pulled and acknowledged - effectively pausing
            the subscription if `Pull` or `StreamingPull` is not called.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfig(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.PushConfig,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="pushConfig">
            Required. The push configuration for future deliveries.
            
            An empty `pushConfig` indicates that the Pub/Sub system should
            stop pushing messages from the given subscription and allow
            messages to be pulled and acknowledged - effectively pausing
            the subscription if `Pull` or `StreamingPull` is not called.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.PushConfig,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="pushConfig">
            Required. The push configuration for future deliveries.
            
            An empty `pushConfig` indicates that the Pub/Sub system should
            stop pushing messages from the given subscription and allow
            messages to be pulled and acknowledged - effectively pausing
            the subscription if `Pull` or `StreamingPull` is not called.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.SubscriptionName,Google.Cloud.PubSub.V1.PushConfig,System.Threading.CancellationToken)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="subscription">
            Required. The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="pushConfig">
            Required. The push configuration for future deliveries.
            
            An empty `pushConfig` indicates that the Pub/Sub system should
            stop pushing messages from the given subscription and allow
            messages to be pulled and acknowledged - effectively pausing
            the subscription if `Pull` or `StreamingPull` is not called.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSnapshot(Google.Cloud.PubSub.V1.GetSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSnapshotAsync(Google.Cloud.PubSub.V1.GetSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.GetSnapshotAsync(Google.Cloud.PubSub.V1.GetSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSnapshots(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="project">
            Required. The name of the project in which to list snapshots.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSnapshotsAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="project">
            Required. The name of the project in which to list snapshots.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSnapshots(Google.Api.Gax.ResourceNames.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="project">
            Required. The name of the project in which to list snapshots.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.ListSnapshotsAsync(Google.Api.Gax.ResourceNames.ProjectName,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="project">
            Required. The name of the project in which to list snapshots.
            Format is `projects/{project-id}`.
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshot(System.String,System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &amp;lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt; resource
            name rules&amp;lt;/a&amp;gt;. Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="subscription">
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
            (a) The existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as:
            (b) Any messages published to the subscription's topic following the
            successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshotAsync(System.String,System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &amp;lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt; resource
            name rules&amp;lt;/a&amp;gt;. Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="subscription">
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
            (a) The existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as:
            (b) Any messages published to the subscription's topic following the
            successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshotAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &amp;lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt; resource
            name rules&amp;lt;/a&amp;gt;. Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="subscription">
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
            (a) The existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as:
            (b) Any messages published to the subscription's topic following the
            successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshot(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &amp;lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt; resource
            name rules&amp;lt;/a&amp;gt;. Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="subscription">
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
            (a) The existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as:
            (b) Any messages published to the subscription's topic following the
            successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SubscriptionName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &amp;lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt; resource
            name rules&amp;lt;/a&amp;gt;. Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="subscription">
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
            (a) The existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as:
            (b) Any messages published to the subscription's topic following the
            successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.CreateSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,Google.Cloud.PubSub.V1.SubscriptionName,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="name">
            Required. User-provided name for this snapshot. If the name is not provided in the
            request, the server will assign a random name for this snapshot on the same
            project as the subscription. Note that for REST API requests, you must
            specify a name.  See the &amp;lt;a
            href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt; resource
            name rules&amp;lt;/a&amp;gt;. Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="subscription">
            Required. The subscription whose backlog the snapshot retains.
            Specifically, the created snapshot is guaranteed to retain:
            (a) The existing backlog on the subscription. More precisely, this is
            defined as the messages in the subscription's backlog that are
            unacknowledged upon the successful completion of the
            `CreateSnapshot` request; as well as:
            (b) Any messages published to the subscription's topic following the
            successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.UpdateSnapshot(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.UpdateSnapshotAsync(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.UpdateSnapshotAsync(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshot(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshotAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshotAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshot(Google.Cloud.PubSub.V1.SnapshotName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.SnapshotName,System.Threading.CancellationToken)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="snapshot">
            Required. The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.Seek(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClient.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,System.Threading.CancellationToken)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl">
            <summary>SubscriberServiceApi client wrapper implementation, for convenient use.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.SetIamPolicyAsync(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.SetIamPolicy(Google.Cloud.Iam.V1.SetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Sets the access control policy on the specified resource. Replaces
             any existing policy.
            
             Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
             PERMISSION_DENIED
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GetIamPolicyAsync(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GetIamPolicy(Google.Cloud.Iam.V1.GetIamPolicyRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the access control policy for a resource. Returns an empty policy
            if the resource exists and does not have a policy set.
            </summary>
            <param name="request">
            The request object containing all of the parameters for the API call.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.TestIamPermissionsAsync(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.TestIamPermissions(Google.Cloud.Iam.V1.TestIamPermissionsRequest,Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Returns permissions that a caller has on the specified resource. If the
             resource does not exist, this will return an empty set of
             permissions, not a NOT_FOUND error.
            
             Note: This operation is designed to be used for building
             permission-aware UIs and command-line tools, not for authorization
             checking. This operation may "fail open" without warning.
             </summary>
             <param name="request">
             The request object containing all of the parameters for the API call.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.#ctor(Google.Cloud.PubSub.V1.Subscriber.SubscriberClient,Google.Cloud.PubSub.V1.SubscriberServiceApiSettings)">
            <summary>
            Constructs a client wrapper for the SubscriberServiceApi service, with the specified gRPC client and
            settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiSettings"/> used within this client.</param>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GrpcClient">
            <summary>The underlying gRPC SubscriberServiceApi client</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.CreateSubscription(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.CreateSubscriptionAsync(Google.Cloud.PubSub.V1.Subscription,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a subscription to a given topic. See the
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/admin#resource_names"&amp;gt;
            resource name rules&amp;lt;/a&amp;gt;.
            If the subscription already exists, returns `ALREADY_EXISTS`.
            If the corresponding topic doesn't exist, returns `NOT_FOUND`.
            
            If the name is not provided in the request, the server will assign a random
            name for this subscription on the same project as the topic, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Subscription object. Note that
            for REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GetSubscription(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GetSubscriptionAsync(Google.Cloud.PubSub.V1.GetSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.UpdateSubscription(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.UpdateSubscriptionAsync(Google.Cloud.PubSub.V1.UpdateSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing subscription. Note that certain properties of a
            subscription, such as its topic, are not modifiable.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ListSubscriptions(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ListSubscriptionsAsync(Google.Cloud.PubSub.V1.ListSubscriptionsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists matching subscriptions.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Subscription"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.DeleteSubscription(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.DeleteSubscriptionAsync(Google.Cloud.PubSub.V1.DeleteSubscriptionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes an existing subscription. All messages retained in the subscription
            are immediately dropped. Calls to `Pull` after deletion will return
            `NOT_FOUND`. After a subscription is deleted, a new one may be created with
            the same name, but the new one has no association with the old
            subscription or its topic unless the same topic is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ModifyAckDeadline(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ModifyAckDeadlineAsync(Google.Cloud.PubSub.V1.ModifyAckDeadlineRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the ack deadline for a specific message. This method is useful
            to indicate that more time is needed to process a message by the
            subscriber, or to make the message available for redelivery if the
            processing was interrupted. Note that this does not modify the
            subscription-level `ackDeadlineSeconds` used for subsequent messages.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.Acknowledge(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.AcknowledgeAsync(Google.Cloud.PubSub.V1.AcknowledgeRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Acknowledges the messages associated with the `ack_ids` in the
            `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
            from the subscription.
            
            Acknowledging a message whose ack deadline has expired may succeed,
            but such a message may be redelivered later. Acknowledging a message more
            than once will not result in an error.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.Pull(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.PullAsync(Google.Cloud.PubSub.V1.PullRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Pulls messages from the server. The server may return `UNAVAILABLE` if
            there are too many concurrent pull requests pending for the given
            subscription.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.StreamingPullStreamImpl.#ctor(Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl,Grpc.Core.AsyncDuplexStreamingCall{Google.Cloud.PubSub.V1.StreamingPullRequest,Google.Cloud.PubSub.V1.StreamingPullResponse},Google.Api.Gax.Grpc.BufferedClientStreamWriter{Google.Cloud.PubSub.V1.StreamingPullRequest})">
            <summary>Construct the bidirectional streaming method for <c>StreamingPull</c>.</summary>
            <param name="service">The service containing this streaming method.</param>
            <param name="call">The underlying gRPC duplex streaming call.</param>
            <param name="writeBuffer">
            The <see cref="T:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1"/> instance associated with
            this streaming call.
            </param>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.StreamingPull(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Establishes a stream with the server, which sends messages down to the
            client. The client streams acknowledgements and ack deadline modifications
            back to the server. The server will close the stream and return the status
            on any error. The server may close the stream with status `UNAVAILABLE` to
            reassign server-side resources, in which case, the client should
            re-establish the stream. Flow control can be achieved by configuring the
            underlying RPC channel.
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <param name="streamingSettings">If not null, applies streaming overrides to this RPC call.</param>
            <returns>The client-server stream.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ModifyPushConfig(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ModifyPushConfigAsync(Google.Cloud.PubSub.V1.ModifyPushConfigRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Modifies the `PushConfig` for a specified subscription.
            
            This may be used to change a push subscription to a pull one (signified by
            an empty `PushConfig`) or vice versa, or change the endpoint URL and other
            attributes of a push subscription. Messages will accumulate for delivery
            continuously through the call regardless of changes to the `PushConfig`.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GetSnapshot(Google.Cloud.PubSub.V1.GetSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.GetSnapshotAsync(Google.Cloud.PubSub.V1.GetSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets the configuration details of a snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow you to manage message acknowledgments in bulk. That
            is, you can set the acknowledgment state of messages in an existing
            subscription to the state captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ListSnapshots(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.ListSnapshotsAsync(Google.Cloud.PubSub.V1.ListSnapshotsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists the existing snapshots. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.PubSub.V1.Snapshot"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.CreateSnapshot(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.CreateSnapshotAsync(Google.Cloud.PubSub.V1.CreateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a snapshot from the requested subscription. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If the snapshot already exists, returns `ALREADY_EXISTS`.
            If the requested subscription doesn't exist, returns `NOT_FOUND`.
            If the backlog in the subscription is too old -- and the resulting snapshot
            would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned.
            See also the `Snapshot.expire_time` field. If the name is not provided in
            the request, the server will assign a random
            name for this snapshot on the same project as the subscription, conforming
            to the
            [resource name
            format](https://cloud.google.com/pubsub/docs/admin#resource_names). The
            generated name is populated in the returned Snapshot object. Note that for
            REST API requests, you must specify a name in the request.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.UpdateSnapshot(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.UpdateSnapshotAsync(Google.Cloud.PubSub.V1.UpdateSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.DeleteSnapshot(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.DeleteSnapshotAsync(Google.Cloud.PubSub.V1.DeleteSnapshotRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Removes an existing snapshot. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            When the snapshot is deleted, all messages retained in the snapshot
            are immediately dropped. After a snapshot is deleted, a new one may be
            created with the same name, but the new one has no association with the old
            snapshot or its subscription, unless the same subscription is specified.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.Seek(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientImpl.SeekAsync(Google.Cloud.PubSub.V1.SeekRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Seeks an existing subscription to a point in time or to a given snapshot,
            whichever is provided in the request. Snapshots are used in
            &amp;lt;a href="https://cloud.google.com/pubsub/docs/replay-overview"&amp;gt;Seek&amp;lt;/a&amp;gt;
            operations, which allow
            you to manage message acknowledgments in bulk. That is, you can set the
            acknowledgment state of messages in an existing subscription to the state
            captured by a snapshot. Note that both the subscription and the snapshot
            must be on the same topic.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder">
            <summary>
            Builder class for <see cref="T:Google.Cloud.PubSub.V1.SubscriberServiceApiClient"/> to provide simple configuration of credentials,
            endpoint etc.
            </summary>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.Settings">
            <summary>The settings to use for RPCs, or <c>null</c> for the default settings.</summary>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.BuildAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.GetDefaultEndpoint">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.GetDefaultScopes">
            <inheritdoc/>
        </member>
        <member name="M:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.GetChannelPool">
            <inheritdoc/>
        </member>
        <member name="P:Google.Cloud.PubSub.V1.SubscriberServiceApiClientBuilder.DefaultGrpcAdapter">
            <inheritdoc/>
        </member>
        <member name="T:Google.Cloud.PubSub.V1.Tasks.AsyncAutoResetEvent">
            <summary>
            Auto-reset async event. Releases all waiting threads on Set().
            </summary>
        </member>
    </members>
</doc>
